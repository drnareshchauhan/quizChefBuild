{"version":3,"sources":["context/InfoContext.js","components/Navbar.js","components/PlayMenuBar.js","pages/Loading.js","pages/Welcome.js","components/TextInput.js","pages/LoginPage.js","pages/RegisterPage.js","pages/SubmitLoading.js","pages/Quiz.js","pages/ErrorPage.js","pages/ForgotPassword.js","components/ProfileSection.js","components/QuizLoading.js","components/HistorySection.js","components/QuizzesSection.js","pages/Dashboard.js","pages/CreateQuiz.js","pages/EditQuiz.js","pages/updateQuizDetails.js","pages/UpdateProfile.js","pages/UpdatePassword.js","components/OwnerQuizzes.js","components/OwnerUsers.js","components/OwnerOrganizers.js","pages/OwnerDashboard.js","pages/OwnerQuizDetails.js","pages/ResultPage.js","pages/StudentResponses.js","pages/VerifyMail.js","pages/QuizStats.js","App.js","serviceWorker.js","index.js"],"names":["InfoContext","React","createContext","Navbar","useContext","isLoggedIn","setLoggedIn","name","useState","navLoggedIn","setNavLoggedIn","navName","setNavName","redirect","setRedirect","open","setOpen","loginModalOpen","setLoginModalOpen","onCloseHandle","useEffect","localStorage","getItem","split","className","to","AppBar","position","elevation","Toolbar","src","Typography","varirant","Button","color","onClick","variant","Dialog","onClose","aria-labelledby","PaperProps","style","backgroundColor","minWidth","textAlign","DialogTitle","clear","setInterval","width","PlayMenuBar","registerModalOpen","setRegisterModalOpen","Grid","container","spacing","item","xs","md","textDecoration","size","Loading","CircularProgress","Welcome","props","loading","setLoading","dashRedirect","setDashRedirect","setAuthToken","changeName","vars","window","location","search","substring","token","map","det","sp","decodeURIComponent","setItem","getQueryParams","Container","alt","Hidden","smDown","TextInput","withStyles","root","borderBottomColor","borderColor","TextField","LoginPage","email","changeEmail","emailError","setEmailError","emailChanged","setEmailChanged","password","changePassword","passwordError","setPasswordError","passwordChanged","setPasswordChanged","showPassword","setShowPassword","didLogin","setDidLogin","errorText","setErrorText","ownerRedirect","setOwnerRedirect","notVerified","setNotVerified","verifyMail","setVerifyMail","type","match","params","isLoading","executeRecaptcha","useGoogleReCaptcha","mailErrorText","setAdmin","passwordErrorText","keyPress","event","key","handleSubmit","length","a","errors","EmailValidator","lType","url","data","captcha","response","axios","post","then","res","status","userDetails","console","log","Alert","severity","pathname","state","sendCode","href","error","helperText","id","label","value","onChange","target","onKeyPress","InputProps","endAdornment","InputAdornment","IconButton","aria-label","edge","Visibility","VisibilityOff","RegisterPage","nameError","setNameError","nameChanged","setNameChanged","phoneNumber","setPhoneNumber","phoneNumberError","setPhoneNumberError","phoneNumberChanged","setPhoneNumberChanged","boardPosition","setBoardPosition","boardPositionError","setBoardPositionError","boardPositionChanged","setBoardPositionChanged","code","setCode","codeError","setCodeError","codeChanged","setCodeChanged","redirectMain","setRedirectMain","signedUp","setSignedUp","setError","emptyText","trim","sType","mobileNumber","signupCode","SubmitLoading","Quiz","quizId","setQuizId","currentStep","setStep","allQuestions","setQuestions","currentQuestion","setCurrentQuestion","currentAns","setCurrentAns","duration","setDuration","startTime","setStartTime","timeRemaining","setTimeRemaining","timeUp","setTimeUp","tabChange","setTabChange","allChosenAns","setAllAns","resultRedirect","setResultRedirect","submitLoading","setSubmitLoading","confirmModal","setConfirmModal","empty","setEmpty","restartStatus","setRestartStatus","pageVisible","usePageVisibility","submitQuiz","questions","timeStarted","timeEnded","Date","now","headers","handleSubmitBtn","timesUp","patch","_next","currQues","selectedOption","_prev","endTime","Number","setTimeout","countdown","MINUTES","SECONDS","toString","undefined","start","questionsData","answerData","question","questionObj","q_id","questionId","text","description","options","push","ansObj","quesId","setupQuiz","blocked","emptyQuiz","lg","padding","margin","borderBottom","minHeight","FormControl","component","FormLabel","RadioGroup","newState","option","FormControlLabel","_id","control","Radio","ErrorPage","ForgotPassword","userType","confirmPassword","setConfirmedPassword","confirmPasswordError","setConfirmedPasswordError","reset","setReset","resetCode","setResetCode","resetCodeError","setResetCodeError","resetCodeChanged","setResetCodeChanged","tokenSent","setTokenSent","invalidKey","setInvalidKey","expiredKey","setExpiredKey","notSent","setNotSent","passwordConfirmed","setPasswordConfirmed","loginRedirect","setLoginRedirect","handleReset","validate","resetKey","newPassword","ProfileSection","profile","quizzesEnrolled","quizzesGiven","quizzes","Link","googleId","QuizLoading","withWidth","setQuizzes","getQuizzes","get","quizL","result","sort","b","scheduledFor","GridList","cols","isWidthUp","quiz","GridListTile","GridListTileBar","title","quizName","subtitle","actionIcon","Tooltip","Settings","List","ListItem","button","ListItemText","primary","secondary","marks","ListItemSecondaryAction","ArrowForwardIos","setQuizzesEnrolled","joinModal","setJoinModal","quizCode","setQuizCode","quizCodeError","setQuizCodeError","enrollModal","setEnrollModal","enrollQuizName","setEnrollQuiz","enrollQuizId","setEnrollQuizId","enrollSnack","setEnrollSnack","snackbar","setSnackBar","errorSnack","setErrorSnack","infoModal","setInfoModal","infoLoading","setInfoLoading","currQuiz","setCurrQuiz","timeRemain","setTimeRemain","startModal","setStartModal","quizStarted","setQuizStarted","setRedirectId","quizDetails","setQuizDetails","earlyError","setEarlyError","lateError","setLateError","givenSnack","setGivenSnack","privateWrongCode","setPrivateWrongCode","alreadyEnrolled","setAlreadyEnrolled","setRefresh","refresh","getCols","getQuizInfo","handleJoinSubmit","handleEnroll","handleUnenroll","handleQuizStart","quizList","quizType","find","o","setupEnrolled","quizRestart","Check","Add","handleStartButton","PlayCircleFilled","handleInfoButton","Info","adminId","handleEnrollButton","display","flexDirection","maxHeight","fontWeight","toDateString","toLocaleTimeString","Block","Snackbar","autoHideDuration","TabPanel","role","hidden","index","children","Dashboard","tab","setTab","redirectOwner","setRedirectOwner","setUserType","setProfile","blockSnack","setBlockSnack","timeUpSnack","setTimeUpSnack","emptySnack","setEmptySnack","getProfile","uType","result1","Object","keys","Tabs","e","newVal","indicatorColor","textColor","Tab","CreateQuiz","setQuizName","quizDate","setQuizDate","setType","redirectEdit","setRedirectEdit","handleDateChange","date","getTime","quizDuration","utils","DateFnsUtils","sm","disableToolbar","format","ampm","views","keyboardIcon","AccessAlarm","marginTop","marginBottom","Slider","defaultValue","step","min","max","valueLabelDisplay","val","Select","MenuItem","EditQuiz","quizQuestions","setQuizQuestions","fileError","setFileError","serverError","setServerError","popoverAnchor","setPopoverAnchor","popoverOpen","Boolean","questionModal","setQuestionModal","newQuestion","setNewQuestion","newQuestionError","setNewQuestionError","option1","setOption1","option1Error","setOption1Error","option2","setOption2","option2Error","setOption2Error","option3","setOption3","option3Error","setOption3Error","option4","setOption4","option4Error","setOption4Error","correctOption","setCorrectOption","correctOptionError","setCorrectOptionError","update","setUpdate","updateId","setUpdateId","deleteModal","setDeleteModal","deleteQuestionModal","setDeleteQuestionModal","quizRestartModal","setQuizRestartModal","closeQuizModal","setCloseQuizModal","responses","setResponses","searchData","setSearchData","searchText","setSearchText","sortBy","setSortBy","clearModal","submitCSV","getQuizDetails","sortByFunc","by","array","userId","handleRestart","handleQuizClose","handleQuestionModalClose","handleDeleteQuestion","delete","handleDelete","handleQuestionUpdate","updateOps","propName","handleQuestionSubmit","correctAnswer","isOwnerOfQuiz","userResults","Create","Delete","quizStatus","marginLeft","Replay","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore","aria-controls","marginRight","handleQuestionEditBtn","handleQuestionDeleteBtn","ExpansionPanelDetails","ListItemIcon","Adjust","BarChart","paddingTop","paddingBottom","placeholder","newRes","filter","toLowerCase","String","sorted","InputLabel","labelId","currentTarget","Popover","anchorEl","anchorOrigin","vertical","horizontal","disableRestoreFocus","useLayerForClickAway","maxWidth","onDrop","acceptedFiles","files","reader","FileReader","onabort","onerror","onload","csv","parse","err","obj","readAsBinaryString","handleFileDrop","getRootProps","getInputProps","AddCircle","UpdateQuizDetails","details","disabled","UpdateProfile","setName","numberError","setNumberError","reload","getDetails","oldPass","setOldPass","oldPassError","setOldPassError","newPass","setNewPass","newPassError","setNewPassError","confirmPass","setConfirmPass","confirmPassError","setConfirmPassError","confirmPassErrorText","setConfirmPassErrorText","OwnerQuizzes","getAllQuizzes","OwnerUsers","users","setUsers","getUsers","user","organizers","setOrganizers","OwnerDashboard","OwnerOrganizers","OwnerQuizDetails","redirectD","setRedirectD","deleteSnack","setDeleteSnack","ResultPage","setMarks","getResponses","selected","Warning","Close","resIcon","StudentResponses","VerifyMail","setEmail","verificationKey","QuizStats","labels","colors","marksPieData","setMarksPieData","highest","lowest","average","highLowGraph","setHighLowData","lineGraphData","setLineData","setup","obj2","Infinity","sum","Math","time","mark","newData","floor","random","newBarData","datasets","height","maintainAspectRatio","responsive","fontSize","barThickness","legend","scales","yAxes","ticks","beginAtZero","App","authToken","info","isAdmin","Provider","loggedIn","exact","path","UpdatePassword","hostname","ReactDOM","render","StrictMode","reCaptchaKey","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d8f46aa4.chunk.js","sourcesContent":["import React from \"react\";\n\nconst InfoContext = React.createContext();\n\nexport default InfoContext;","import React, { useContext, useEffect, useState } from 'react';\nimport {\n  AppBar,\n  Typography,\n  Toolbar,\n  Button,\n  Dialog,\n  DialogTitle,\n} from '@material-ui/core';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport './Navbar.css';\nimport InfoContext from '../context/InfoContext';\n\nfunction Navbar() {\n  const { isLoggedIn, setLoggedIn, name } = useContext(InfoContext);\n  const [navLoggedIn, setNavLoggedIn] = useState(false);\n  const [navName, setNavName] = useState(null);\n  const [redirect, setRedirect] = useState(false);\n\n  const [open, setOpen] = useState(false);\n  const [loginModalOpen, setLoginModalOpen] = useState(false);\n\n  const onCloseHandle = () => {\n    setOpen(false);\n    setLoginModalOpen(false);\n  };\n  const handleLogoutBtn = () => {\n    setOpen(true);\n  };\n\n  const handleLogout = () => {\n    localStorage.clear();\n    setLoggedIn(false);\n    setOpen(false);\n    setRedirect(true);\n\n    setInterval(() => {\n      setRedirect(false);\n    }, 1000);\n  };\n\n  useEffect(() => {\n    let loggedin = localStorage.getItem('userLoggedIn');\n    if (loggedin === 'true') {\n      setNavLoggedIn(true);\n      setNavName(localStorage.getItem('name').split(' ')[0]);\n    } else {\n      setNavLoggedIn(isLoggedIn);\n      if (name !== null) setNavName(name.split(' ')[0]);\n    }\n  });\n\n  return (\n    <div className=\"root\">\n      {redirect ? <Redirect to=\"/\" /> : null}\n      <AppBar position=\"static\" className=\"navbar\" elevation={4}>\n        <Toolbar>\n          <Link to=\"/\" className=\"nav-link\">\n            <img src=\"../CC LOGO-01.svg\" className=\"nav-logo\" />\n          </Link>\n          <Typography varirant=\"h6\" className=\"nav-head\">\n            The MCQs Platform\n          </Typography>\n          <div className=\"btn-bar\">\n            {navLoggedIn === false ? (\n              <Button\n                color=\"inherit\"\n                className=\"login\"\n                onClick={() => setLoginModalOpen(true)}\n              >\n                Login\n              </Button>\n            ) : (\n              <Typography variant=\"h6\" className=\"nav-user\">\n                Welcome, {navName}\n              </Typography>\n            )}\n            {navLoggedIn ? (\n              <Button className=\"logout-btn\" onClick={handleLogoutBtn}>\n                Logout\n              </Button>\n            ) : null}\n          </div>\n        </Toolbar>\n      </AppBar>\n\n      <Dialog\n        open={open}\n        onClose={onCloseHandle}\n        aria-labelledby=\"form-dialog-title\"\n        PaperProps={{\n          style: {\n            backgroundColor: 'white',\n            color: 'black',\n            minWidth: '10%',\n            textAlign: 'center',\n          },\n        }}\n      >\n        <DialogTitle>Are you sure you want to logout?</DialogTitle>\n        <div className=\"btn-div\">\n          <Button className=\"logout-btn m-right\" onClick={handleLogout}>\n            Yes\n          </Button>\n          <Button className=\"cancel-btn m-left\" onClick={onCloseHandle}>\n            No\n          </Button>\n        </div>\n      </Dialog>\n      <Dialog\n        open={loginModalOpen}\n        onClose={onCloseHandle}\n        aria-labelledby=\"form-dialog-title\"\n        PaperProps={{\n          style: { backgroundColor: 'white', color: '#333', minWidth: '40%' },\n        }}\n        style={{ width: '100%' }}\n      >\n        <div className=\"modal-info\">\n          <Typography variant=\"h5\" className=\"type-head\">\n            Are you a student or an organizer?\n          </Typography>\n          <div className=\"modal-btns\">\n            <Link to=\"/login/user\" className=\"link\">\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                className=\"modal-select-btn modal-student\"\n                onClick={() => setLoginModalOpen(false)}\n              >\n                Student\n              </Button>\n            </Link>\n            <Link to=\"/login/organizer\" className=\"link\">\n              <Button\n                variant=\"outlined\"\n                color=\"secondary\"\n                className=\"modal-select-btn modal-organizer\"\n                onClick={() => setLoginModalOpen(false)}\n              >\n                Organizer\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React, { useContext, useState } from \"react\";\nimport { Grid, Button, Typography, Dialog, DialogTitle } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport './PlayMenuBar.css';\nimport InfoContext from '../context/InfoContext';\n\nfunction PlayMenuBar() {\n\tconst { isLoggedIn } = useContext(InfoContext);\n\tconst [loginModalOpen, setLoginModalOpen] = useState(false);\n\tconst [registerModalOpen, setRegisterModalOpen] = useState(false);\n\n\tconst onCloseHandle = () => {\n\t\tsetLoginModalOpen(false);\n\t\tsetRegisterModalOpen(false);\n\t}\n\n\tif (!isLoggedIn) {\n\t\treturn (\n\t\t\t<div className=\"play-container\">\n\t\t\t\t<Grid container spacing={0}>\n\t\t\t\t\t<Grid item xs={12} md={6} className=\"not-logged-menu\">\n\t\t\t\t\t\t<Typography variant=\"h4\" className=\"login-msg\">You are not logged in!</Typography>\n\t\t\t\t\t\t<Typography variant=\"h6\" className=\"login-msg\">Login/Signup to continue!</Typography>\n\t\t\t\t\t\t<div className=\"button-bar\">\n\t\t\t\t\t\t\t<Button size=\"large\" className=\"action-button login-button\" onClick={() => setLoginModalOpen(true)}>Login</Button>\n\t\t\t\t\t\t\t<Button size=\"large\" className=\"action-button signup-button\" onClick={() => setRegisterModalOpen(true)}>SignUp</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Dialog open={loginModalOpen} onClose={onCloseHandle} aria-labelledby=\"form-dialog-title\"\n\t\t\t\t\tPaperProps={{ style: { backgroundColor: 'white', color: '#333', minWidth: '40%' } }}\n\t\t\t\t\tstyle={{ width: '100%' }}>\n\t\t\t\t\t<div className=\"modal-info\">\n\t\t\t\t\t\t<Typography variant=\"h5\" className=\"type-head\">Are you a student or an organizer?</Typography>\n\t\t\t\t\t\t<div className=\"modal-btns\">\n\t\t\t\t\t\t\t<Link to=\"/login/user\" className=\"link\">\n\t\t\t\t\t\t\t\t<Button variant=\"outlined\" color=\"primary\" className=\"modal-select-btn modal-student\">Student</Button>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<Link to=\"/login/organizer\" className=\"link\">\n\t\t\t\t\t\t\t\t<Button variant=\"outlined\" color=\"secondary\" className=\"modal-select-btn modal-organizer\">Organizer</Button>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Dialog>\n\t\t\t\t<Dialog open={registerModalOpen} onClose={onCloseHandle} aria-labelledby=\"form-dialog-title\"\n\t\t\t\t\tPaperProps={{ style: { backgroundColor: 'white', color: '#333', minWidth: '40%' } }}\n\t\t\t\t\tstyle={{ width: '100%' }}>\n\t\t\t\t\t<div className=\"modal-info\">\n\t\t\t\t\t\t<Typography variant=\"h5\" className=\"type-head\">Are you a student or an organizer?</Typography>\n\t\t\t\t\t\t<div className=\"modal-btns\">\n\t\t\t\t\t\t\t<Link to=\"/register/user\" className=\"link\">\n\t\t\t\t\t\t\t\t<Button variant=\"outlined\" color=\"primary\" className=\"modal-select-btn modal-student\">Student</Button>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<Link to=\"/register/organizer\" className=\"link\">\n\t\t\t\t\t\t\t\t<Button variant=\"outlined\" color=\"secondary\" className=\"modal-select-btn modal-organizer\">Organizer</Button>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Dialog>\n\t\t\t</div>\n\t\t);\n\t}\n\telse if (isLoggedIn) {\n\t\treturn (\n\t\t\t<div className=\"play-container\">\n\t\t\t\t<Grid container spacing={0}>\n\t\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t\t<div className=\"play-menu\">\n\t\t\t\t\t\t\t<Link to=\"/dashboard\" style={{textDecoration: 'none'}}>\n\t\t\t\t\t\t\t\t<Button size=\"large\" className=\"quiz-button\"><p className=\"button-text\">Go to the Dashboard</p></Button>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default PlayMenuBar;","import React from \"react\";\nimport {CircularProgress} from \"@material-ui/core\";\nimport './Loading.css';\n\nfunction Loading() {\n\treturn (\n\t\t<div className=\"loading-screen\">\n\t\t\t<CircularProgress color=\"secondary\" />\n\t\t</div>\n\t);\n}\n\nexport default Loading;","import React, { useContext, useEffect, useState } from 'react';\nimport { Container, Grid, Hidden } from '@material-ui/core';\nimport './Welcome.css';\nimport PlayMenuBar from '../components/PlayMenuBar';\nimport InfoContext from '../context/InfoContext';\nimport axios from 'axios';\nimport Loading from './Loading';\nimport { Redirect } from 'react-router';\nimport * as qs from 'query-string';\n\nfunction Welcome(props) {\n  const [loading, setLoading] = useState(true);\n  const [dashRedirect, setDashRedirect] = useState(false);\n  const { setLoggedIn, setAuthToken, changeName } = useContext(InfoContext);\n\n  const getQueryParams = () => {\n    const query = window.location.search.substring(1);\n    const vars = query.split('&');\n\n    let name = null;\n    let token = null;\n\n    vars.map((det) => {\n      const sp = det.split('=');\n      if (sp[0] === 'name') {\n        name = decodeURIComponent(sp[1]);\n      } else if (sp[0] === 'token') {\n        token = sp[1];\n      }\n    });\n\n    if (name !== null && token !== null) {\n      setAuthToken(token);\n      changeName(name);\n\n      localStorage.setItem('authToken', token);\n      localStorage.setItem('name', name);\n      localStorage.setItem('userLoggedIn', true);\n      setLoggedIn(true);\n\n      setDashRedirect(true);\n      return true;\n    }\n\n    return false;\n  };\n\n  useEffect(() => {\n    if (!getQueryParams()) {\n      const token = localStorage.getItem('authToken');\n      if (token === null) {\n        setLoggedIn(false);\n        setLoading(false);\n      } else {\n        setLoggedIn(true);\n        setDashRedirect(true);\n        setLoading(false);\n      }\n    }\n  }, []);\n\n  if (dashRedirect) {\n    return <Redirect to=\"/dashboard\" />;\n  } else {\n    return loading ? (\n      <Loading />\n    ) : (\n      <Container className=\"welcome-page\">\n        <div className=\"welcome-screen\">\n          <Grid container spacing={0}>\n            <Grid item xs={12} md={6} className=\"heading-section\">\n              <img\n                src=\"head.png\"\n                className=\"quiz-image\"\n                alt=\"Welcome to pSmcQ\"\n              ></img>\n            </Grid>\n            <Hidden smDown>\n              <Grid item xs={12} md={6} className=\"pin-section\">\n                <img\n                  src=\"quiz.png\"\n                  className=\"pin-image\"\n                  alt=\"User Representation\"\n                ></img>\n              </Grid>\n            </Hidden>\n          </Grid>\n          <PlayMenuBar />\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default Welcome;\n","import {TextField, withStyles} from \"@material-ui/core\";\n\nconst TextInput = withStyles({\n\troot: {\n\t\t'& label': {\n\t\t\tcolor: 'rgba(0,0,0,0.7)',\n\t\t},\n\t\t'& label.Mui-focused': {\n\t\t\tcolor: '#2980B9',\n\t\t},\n\t\t'& .MuiInput-underline:after': {\n\t\t\tborderBottomColor: '#2980B9',\n\t\t},\n\t\t'& .MuiInputBase-input': {\n\t\t\tcolor: 'black !important',\n\t\t},\n\t\t'& .MuiOutlinedInput-root': {\n\t\t\t'& fieldset': {\n\t\t\t  borderColor: 'rgba(0,0,0,0.7)',\n\t\t\t},\n\t\t\t'&:hover fieldset': {\n\t\t\t  borderColor: '#2980B9',\n\t\t\t},\n\t\t\t'&.Mui-focused fieldset': {\n\t\t\t  borderColor: '#2980B9',\n\t\t\t},\n\t\t  },\n\t}\n})(TextField);\n\nexport default TextInput;","import React, { useState, useEffect, useContext, useRef } from 'react';\nimport './LoginPage.css';\nimport './GoogleButton.css';\nimport {\n  Container,\n  Typography,\n  Button,\n  InputAdornment,\n  IconButton,\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { Link, Redirect } from 'react-router-dom';\nimport TextInput from '../components/TextInput';\nimport * as EmailValidator from 'email-validator';\nimport InfoContext from '../context/InfoContext';\nimport axios from 'axios';\nimport Loading from './Loading';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport { useGoogleReCaptcha } from 'react-google-recaptcha-v3';\n\nfunction LoginPage(props) {\n  const [email, changeEmail] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [emailChanged, setEmailChanged] = useState(false);\n  const [password, changePassword] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [passwordChanged, setPasswordChanged] = useState(false);\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const [didLogin, setDidLogin] = useState(null);\n  const [errorText, setErrorText] = useState('Error Logging In! Try again....');\n  const [redirect, setRedirect] = useState(false);\n  const [ownerRedirect, setOwnerRedirect] = useState(false);\n  const [loginRedirect, setLoginRedirect] = useState(false);\n\n  const [notVerified, setNotVerified] = useState(false);\n  const [verifyMail, setVerifyMail] = useState('');\n\n  const type = props.match.params.type;\n  const type1 = type === 'user' ? 'user' : 'organizer';\n\n  const [isLoading, setLoading] = useState(false);\n\n  const { executeRecaptcha } = useGoogleReCaptcha();\n\n  const { setLoggedIn, changeName, setAuthToken, setAdmin } =\n    useContext(InfoContext);\n\n  const mailErrorText = 'Email cannot be empty';\n  const passwordErrorText = 'Password cannot be empty';\n\n  const handleEmailChange = (event) => {\n    setEmailChanged(true);\n    changeEmail(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPasswordChanged(true);\n    changePassword(event.target.value);\n  };\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const keyPress = (event) => {\n    if (event.key === 'Enter') {\n      handleSubmit();\n    }\n  };\n\n  useEffect(() => {\n    if (email.length === 0) setEmailError(mailErrorText);\n    else setEmailError('');\n\n    if (password.length === 0) setPasswordError(passwordErrorText);\n    else setPasswordError('');\n  }, [email, password]);\n\n  const handleSubmit = async (event) => {\n    // event.preventDefault();\n\n    setEmailChanged(true);\n    setPasswordChanged(true);\n\n    let errors = false;\n\n    if (email.length === 0) {\n      setEmailError(mailErrorText);\n      errors = true;\n    } else if (!EmailValidator.validate(email)) {\n      setEmailError('Invalid email address!');\n      errors = true;\n    }\n    if (password.length === 0) {\n      setPasswordError(passwordErrorText);\n      errors = true;\n    } else if (password.length < 8) {\n      setPasswordError('Minimum length of password must be 8.');\n      errors = true;\n    }\n\n    if (!errors && emailError.length === 0 && passwordError.length === 0) {\n      setLoading(true);\n      let lType = type;\n\n      if (type === 'organizer') lType = 'admin';\n\n      let url = `http://psmcq.online/${lType}/login`;\n      let token = await executeRecaptcha('login_page');\n\n      let data = {\n        email: email,\n        password: password,\n        captcha: token,\n      };\n\n      let response = null;\n      try {\n        await axios.post(url, data).then((res) => {\n          response = res;\n        });\n\n        if (response.status === 200) {\n          changeName(response.data.userDetails.name);\n          setLoggedIn(true);\n          setAuthToken(response.data.token);\n\n          localStorage.setItem('userLoggedIn', true);\n          localStorage.setItem('name', response.data.userDetails.name);\n          localStorage.setItem('authToken', response.data.token);\n\n          if (type === 'owner') {\n            setOwnerRedirect(true);\n            //TODO: Redirect dashboard shit\n          } else {\n            setRedirect(true);\n          }\n        }\n      } catch (error) {\n        console.log(error);\n        if (error.response.status === 409) {\n          setVerifyMail(data.email);\n          setNotVerified(true);\n        } else if (error.response.status === 401) {\n          setErrorText('Invalid Credentials...');\n          setDidLogin(false);\n        } else {\n          setErrorText('Error Logging In! Try again....');\n          setDidLogin(false);\n        }\n      }\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (type !== 'user' && type !== 'organizer' && type !== 'owner') {\n      setRedirect(true);\n    }\n  }, [type]);\n\n  if (redirect === true) {\n    return <Redirect to=\"/\" />;\n  } else if (ownerRedirect) {\n    return <Redirect to=\"/coronilOP\" />;\n  }\n  return isLoading ? (\n    <Loading />\n  ) : (\n    <Container className=\"login-page\">\n      <div className=\"login-form\">\n        <Typography variant=\"h3\" color=\"primary\" className=\"login-head\">\n          {type === 'user'\n            ? 'Login Now'\n            : type === 'organizer'\n            ? 'Organizer Login'\n            : 'Owner Login'}\n        </Typography>\n        <br />\n        {didLogin === false ? (\n          <Alert severity=\"error\">{errorText}</Alert>\n        ) : null}\n        {notVerified ? (\n          <Alert severity=\"error\">\n            Your email is not verified.\n            <Link\n              className=\"link\"\n              style={{ color: 'red' }}\n              to={{\n                pathname: `/verify/${type}`,\n                state: {\n                  email: verifyMail,\n                  sendCode: true,\n                },\n              }}\n            >\n              Click here to verify...\n            </Link>\n          </Alert>\n        ) : null}\n        {type !== 'owner' ? (\n          <a\n            href={\n              type === 'user'\n                ? 'http://psmcq.online/auth/google'\n                : 'http://psmcq.online/auth/admin/google'\n            }\n            className=\"google-link\"\n          >\n            <div className=\"google-btn\">\n              <div className=\"google-icon-wrapper\">\n                <img\n                  className=\"google-icon\"\n                  src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\n                />\n              </div>\n              <p className=\"btn-text\">\n                <b>Sign in with Google</b>\n              </p>\n            </div>\n          </a>\n        ) : null}\n        <form className=\"form\">\n          <TextInput\n            error={\n              emailChanged ? (emailError.length === 0 ? false : true) : false\n            }\n            helperText={\n              emailChanged\n                ? emailError.length === 0\n                  ? null\n                  : emailError\n                : null\n            }\n            id=\"email\"\n            label=\"Email\"\n            type=\"email\"\n            className=\"form-input\"\n            variant=\"outlined\"\n            value={email}\n            onChange={handleEmailChange}\n            onKeyPress={keyPress}\n          ></TextInput>\n          <br />\n          <TextInput\n            error={\n              passwordChanged\n                ? passwordError.length === 0\n                  ? false\n                  : true\n                : false\n            }\n            helperText={\n              passwordChanged\n                ? passwordError.length === 0\n                  ? null\n                  : passwordError\n                : null\n            }\n            id=\"password\"\n            type={showPassword ? 'text' : 'password'}\n            label=\"Password\"\n            className=\"form-input\"\n            variant=\"outlined\"\n            value={password}\n            onChange={handlePasswordChange}\n            onKeyPress={keyPress}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"show password\"\n                    onClick={togglePasswordVisibility}\n                    edge=\"end\"\n                  >\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          ></TextInput>\n        </form>\n        <div className=\"forgot-section\">\n          {type === 'owner' ? null : (\n            <Link to={`/forgotPassword/${type}`} className=\"link forgot-pass\">\n              Forgot your password?\n            </Link>\n          )}\n        </div>\n        <Button className=\"login-btn\" onClick={handleSubmit}>\n          Login\n        </Button>\n        <Link to={`/register/${type}`} className=\"link register-link\">\n          Don't have an account? Join the pSmcQ now!\n        </Link>\n      </div>\n    </Container>\n  );\n}\n\nexport default LoginPage;\n","import React, { useState, useEffect } from 'react';\nimport './RegisterPage.css';\nimport {\n  Container,\n  Typography,\n  Button,\n  InputAdornment,\n  IconButton,\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { Redirect, Link } from 'react-router-dom';\nimport TextInput from '../components/TextInput';\nimport * as EmailValidator from 'email-validator';\nimport axios from 'axios';\nimport Loading from './Loading';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport { useGoogleReCaptcha } from 'react-google-recaptcha-v3';\n\nfunction RegisterPage(props) {\n  const [name, changeName] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [nameChanged, setNameChanged] = useState(false);\n\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [phoneNumberError, setPhoneNumberError] = useState('');\n  const [phoneNumberChanged, setPhoneNumberChanged] = useState(false);\n\n  const [boardPosition, setBoardPosition] = useState('');\n  const [boardPositionError, setBoardPositionError] = useState('');\n  const [boardPositionChanged, setBoardPositionChanged] = useState(false);\n\n  const [email, changeEmail] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [emailChanged, setEmailChanged] = useState(false);\n\n  const [password, changePassword] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [passwordChanged, setPasswordChanged] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const [code, setCode] = useState('');\n  const [codeError, setCodeError] = useState('');\n  const [codeChanged, setCodeChanged] = useState(false);\n\n  const [redirect, setRedirect] = useState(false);\n  const [redirectMain, setRedirectMain] = useState(false);\n\n  const [signedUp, setSignedUp] = useState(false);\n  const [existEmail, setExistEmail] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [errorText, setErrorText] = useState('');\n\n  const type = props.match.params.type;\n  const { executeRecaptcha } = useGoogleReCaptcha();\n\n  const emptyText = (type) => `${type} cannot be empty`;\n\n  const handleNameChange = (event) => {\n    setNameChanged(true);\n    changeName(event.target.value);\n  };\n\n  const handlePhoneChange = (event) => {\n    setPhoneNumberChanged(true);\n    setPhoneNumber(event.target.value);\n  };\n\n  const handleBoardPositionChange = (event) => {\n    setBoardPositionChanged(true);\n    setBoardPosition(event.target.value);\n  };\n\n  const handleEmailChange = (event) => {\n    setEmailChanged(true);\n    changeEmail(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPasswordChanged(true);\n    changePassword(event.target.value);\n  };\n\n  const handleCodeChange = (event) => {\n    setCodeChanged(true);\n    setCode(event.target.value);\n  };\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const keyPress = (event) => {\n    if (event.key === 'Enter') {\n      handleSubmit();\n    }\n  };\n\n  useEffect(() => {\n    if (name.length === 0) setNameError(emptyText('Name'));\n    else setNameError('');\n\n    if (email.length === 0) setEmailError(emptyText('Email'));\n    else setEmailError('');\n\n    if (password.length === 0) setPasswordError(emptyText('Password'));\n    else setPasswordError('');\n\n    if (phoneNumber.length === 0)\n      setPhoneNumberError(emptyText('Phone Number'));\n    else setPhoneNumberError('');\n\n    if (type === 'owner') {\n      if (boardPosition.length === 0)\n        setBoardPositionError(emptyText('Board Position'));\n      else setBoardPositionError('');\n\n      if (code.length === 0) setCodeError(emptyText('Secret Code'));\n      else setCodeError('');\n    }\n  }, [name, email, password, phoneNumber, boardPosition, code]);\n\n  const handleSubmit = async (event) => {\n    // event.preventDefault();\n    setNameChanged(true);\n    setPasswordChanged(true);\n    setEmailChanged(true);\n    setPhoneNumberChanged(true);\n\n    if (type === 'owner') {\n      setBoardPositionChanged(true);\n      setCodeChanged(true);\n    }\n\n    let errors = false;\n\n    if (name.trim().length === 0) {\n      setEmailError(emptyText('Name'));\n      errors = true;\n    }\n\n    if (email.trim().length === 0) {\n      setEmailError(emptyText('Email'));\n      errors = true;\n    } else if (!EmailValidator.validate(email)) {\n      setEmailError('Invalid email address!');\n      errors = true;\n    }\n    if (password.trim().length === 0) {\n      setPasswordError(emptyText('Password'));\n      errors = true;\n    } else if (password.length < 8) {\n      setPasswordError('Minimum length of password must be 8.');\n      errors = true;\n    }\n\n    if (type === 'owner') {\n      if (boardPosition.trim().length === 0) {\n        setBoardPositionError(emptyText('Board Position'));\n        errors = true;\n      }\n\n      if (code.trim().length === 0) {\n        setCodeError(emptyText('Secret Code'));\n        errors = true;\n      }\n    }\n\n    if (phoneNumber.trim().length === 0) {\n      setPhoneNumberError(emptyText('Phone Number'));\n      errors = true;\n    } else if (phoneNumber.length !== 10) {\n      setPhoneNumberError('Invalid phone number');\n      errors = true;\n    }\n\n    if (!errors && emailError.length === 0 && passwordError.length === 0) {\n      setLoading(true);\n      let sType = type;\n\n      if (type === 'organizer') sType = 'admin';\n\n      let url = `http://psmcq.online/${sType}/signup`;\n\n      let data = null;\n\n      let token = await executeRecaptcha('signup_page');\n      console.log(token);\n\n      if (type === 'owner') {\n        data = {\n          name: name,\n          email: email,\n          password: password,\n          mobileNumber: phoneNumber,\n          boardPosition: boardPosition,\n          signupCode: code,\n          captcha: token,\n        };\n      } else {\n        data = {\n          name: name,\n          email: email,\n          password: password,\n          mobileNumber: phoneNumber,\n          captcha: token,\n        };\n      }\n\n      let response = null;\n      try {\n        await axios.post(url, data).then((res) => {\n          response = res;\n        });\n\n        if (response.status === 201) {\n          setSignedUp(true);\n          setRedirect(true);\n        }\n      } catch (error) {\n        if (error.response.status === 409) {\n          setErrorText('Account already exists...');\n        } else if (type === 'owner' && error.response.status === 400) {\n          setErrorText('Wrong secret code...');\n        } else {\n          setErrorText('There was some error!');\n        }\n        setPasswordChanged(false);\n        changePassword('');\n        setError(true);\n      }\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (type !== 'user' && type !== 'organizer' && type !== 'owner') {\n      setRedirectMain(true);\n    }\n  }, [type]);\n\n  if (redirect === true) {\n    let to =\n      type === 'user' ? 'user' : type === 'organizer' ? 'organizer' : 'owner';\n    return (\n      <Redirect\n        to={{\n          pathname: `/verify/${to}`,\n          state: {\n            email: email,\n          },\n        }}\n      />\n    );\n  } else if (redirectMain) {\n    return <Redirect to=\"/\" />;\n  }\n  return isLoading ? (\n    <Loading />\n  ) : (\n    <Container className=\"login-page\">\n      <div className=\"login-form\">\n        <Typography\n          variant=\"h3\"\n          color=\"primary\"\n          className=\"login-head signup-text\"\n        >\n          {type === 'user'\n            ? 'Join the force!'\n            : type === 'organizer'\n            ? 'Organizer Sign Up'\n            : 'Owner Signup'}\n        </Typography>\n        <br />\n        {signedUp === true ? (\n          <Alert severity=\"success\" color=\"warning\">\n            Succesfully Signed Up! Redirecting...\n          </Alert>\n        ) : null}\n        {error === true ? (\n          <Alert severity=\"error\" color=\"error\">\n            {errorText}\n          </Alert>\n        ) : null}\n        {type !== 'owner' ? (\n          <a\n            href={\n              type === 'user'\n                ? 'http://psmcq.online/auth/google'\n                : 'http://psmcq.online/auth/admin/google'\n            }\n            className=\"google-link\"\n          >\n            <div className=\"google-btn\">\n              <div className=\"google-icon-wrapper\">\n                <img\n                  className=\"google-icon\"\n                  src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\n                  alt=\"google\"\n                />\n              </div>\n              <p className=\"btn-text\">\n                <b>Sign up with Google</b>\n              </p>\n            </div>\n          </a>\n        ) : null}\n        <form className=\"form\">\n          <TextInput\n            error={\n              nameChanged ? (nameError.length === 0 ? false : true) : false\n            }\n            helperText={\n              nameChanged ? (nameError.length === 0 ? null : nameError) : null\n            }\n            id=\"name\"\n            label=\"Name\"\n            type=\"text\"\n            className=\"form-input\"\n            variant=\"outlined\"\n            value={name}\n            onChange={handleNameChange}\n            onKeyPress={keyPress}\n          ></TextInput>\n          <TextInput\n            error={\n              phoneNumberChanged\n                ? phoneNumberError.length === 0\n                  ? false\n                  : true\n                : false\n            }\n            helperText={\n              phoneNumberChanged\n                ? phoneNumberError.length === 0\n                  ? null\n                  : phoneNumberError\n                : null\n            }\n            id=\"phone-number\"\n            label=\"Phone Number\"\n            type=\"text\"\n            className=\"form-input\"\n            variant=\"outlined\"\n            value={phoneNumber}\n            onChange={handlePhoneChange}\n            onKeyPress={keyPress}\n          ></TextInput>\n          {type === 'owner' ? (\n            <TextInput\n              error={\n                boardPositionChanged\n                  ? boardPositionError.length === 0\n                    ? false\n                    : true\n                  : false\n              }\n              helperText={\n                boardPositionChanged\n                  ? boardPositionError.length === 0\n                    ? null\n                    : boardPositionError\n                  : null\n              }\n              id=\"board-position\"\n              label=\"Board Position\"\n              type=\"text\"\n              className=\"form-input\"\n              variant=\"outlined\"\n              value={boardPosition}\n              onChange={handleBoardPositionChange}\n              onKeyPress={keyPress}\n            ></TextInput>\n          ) : null}\n          <TextInput\n            error={\n              emailChanged ? (emailError.length === 0 ? false : true) : false\n            }\n            helperText={\n              emailChanged\n                ? emailError.length === 0\n                  ? null\n                  : emailError\n                : null\n            }\n            id=\"email\"\n            label=\"Email\"\n            type=\"email\"\n            className=\"form-input\"\n            variant=\"outlined\"\n            value={email}\n            onChange={handleEmailChange}\n            onKeyPress={keyPress}\n          ></TextInput>\n          <TextInput\n            error={\n              passwordChanged\n                ? passwordError.length === 0\n                  ? false\n                  : true\n                : false\n            }\n            helperText={\n              passwordChanged\n                ? passwordError.length === 0\n                  ? null\n                  : passwordError\n                : null\n            }\n            id=\"password\"\n            type={showPassword ? 'text' : 'password'}\n            label=\"Password\"\n            className=\"form-input\"\n            variant=\"outlined\"\n            value={password}\n            onChange={handlePasswordChange}\n            onKeyPress={keyPress}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"show password\"\n                    onClick={togglePasswordVisibility}\n                    edge=\"end\"\n                  >\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          ></TextInput>\n          {type === 'owner' ? (\n            <TextInput\n              error={\n                codeChanged ? (codeError.length === 0 ? false : true) : false\n              }\n              helperText={\n                codeChanged ? (codeError.length === 0 ? null : codeError) : null\n              }\n              id=\"owner-code\"\n              label=\"Secret Code\"\n              type=\"text\"\n              className=\"form-input\"\n              variant=\"outlined\"\n              value={code}\n              onChange={handleCodeChange}\n              onKeyPress={keyPress}\n            ></TextInput>\n          ) : null}\n        </form>\n        <Button className=\"login-btn signup-btn\" onClick={handleSubmit}>\n          Sign Up\n        </Button>\n        {/* <Link to=\"/registerOrganiser\" className=\"link register-link\">Are you an Organiser? Go to the organiser signup!</Link> */}\n      </div>\n    </Container>\n  );\n}\n\nexport default RegisterPage;\n","import React from \"react\";\nimport {CircularProgress} from \"@material-ui/core\";\nimport './Loading.css';\n\nfunction SubmitLoading() {\n\treturn (\n\t\t<div className=\"loading-screen\">\n\t\t\t<CircularProgress color=\"secondary\" />\n\t\t\t<div className=\"loader\">Submitting your answers\n\t\t\t\t<span className=\"loader__dot\">.</span>\n\t\t\t\t<span className=\"loader__dot\">.</span>\n\t\t\t\t<span className=\"loader__dot\">.</span></div>\n\t\t</div>\n\t);\n}\n\nexport default SubmitLoading;","import React, { useState, useEffect, useContext } from 'react';\nimport {\n  Grid,\n  Snackbar,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  Dialog,\n  DialogTitle,\n  Button,\n} from '@material-ui/core';\nimport './Quiz.css';\nimport Loading from './Loading';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport InfoContext from '../context/InfoContext';\nimport SubmitLoading from './SubmitLoading';\nimport { usePageVisibility } from 'react-page-visibility';\nimport countdown from 'countdown';\nimport { useGoogleReCaptcha } from 'react-google-recaptcha-v3';\n\nfunction Quiz(props) {\n  const [quizId, setQuizId] = useState(null);\n  const [currentStep, setStep] = useState(1);\n\n  const [loading, setLoading] = useState(true);\n  const [allQuestions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [currentAns, setCurrentAns] = useState(null);\n\n  const [duration, setDuration] = useState(-1);\n  const [startTime, setStartTime] = useState(-1);\n  const [timeRemaining, setTimeRemaining] = useState('');\n  const [timeUp, setTimeUp] = useState(false);\n\n  const [tabChange, setTabChange] = useState(false);\n\n  const [allChosenAns, setAllAns] = useState(null);\n  const [redirect, setRedirect] = useState(false);\n  const [resultRedirect, setResultRedirect] = useState(false);\n\n  const [submitLoading, setSubmitLoading] = useState(false);\n\n  const [confirmModal, setConfirmModal] = useState(false);\n  const [empty, setEmpty] = useState(false);\n  const [restartStatus, setRestartStatus] = useState(-1);\n\n  const pageVisible = usePageVisibility();\n  const { executeRecaptcha } = useGoogleReCaptcha();\n\n  const submitQuiz = async () => {\n    setSubmitLoading(true);\n    let token = localStorage.getItem('authToken');\n    let url = 'http://psmcq.online/quiz/check';\n\n    let captcha = await executeRecaptcha('submit_token');\n\n    let data = {\n      quizId: quizId,\n      questions: allChosenAns,\n      timeStarted: props.location.state.timeStarted,\n      timeEnded: Date.now(),\n      captcha: captcha,\n    };\n\n    try {\n      await axios\n        .post(url, data, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          setResultRedirect(true);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onCloseHandle = () => {\n    setConfirmModal(false);\n  };\n\n  const handleSubmitBtn = () => {\n    setConfirmModal(true);\n  };\n\n  const handleSubmit = (event) => {\n    submitQuiz();\n  };\n  const timesUp = async () => {\n    setLoading(true);\n    setTimeUp(true);\n    let token = localStorage.getItem('authToken');\n    let url = 'http://psmcq.online/quiz/finish';\n\n    let data = {\n      quizId: quizId,\n    };\n\n    try {\n      await axios\n        .patch(url, data, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          setRedirect(true);\n          return;\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const _next = () => {\n    let currQues = currentQuestion + 1;\n    setStep(currentStep + 1);\n    setCurrentQuestion(currentQuestion + 1);\n    setCurrentAns(allChosenAns[currQues].selectedOption);\n  };\n  const _prev = () => {\n    let currQues = currentQuestion - 1;\n    setStep(currentStep - 1);\n    setCurrentQuestion(currentQuestion - 1);\n    setCurrentAns(allChosenAns[currQues].selectedOption);\n  };\n  const previousButton = () => {\n    if (currentStep !== 1) {\n      return (\n        <button className=\"quiz-btn prev-button\" onClick={_prev}>\n          <p>Previous</p>\n        </button>\n      );\n    }\n    return null;\n  };\n\n  const nextButton = () => {\n    if (currentStep < allQuestions.length) {\n      return (\n        <button className=\"quiz-btn next-button\" onClick={_next}>\n          <p>Next</p>\n        </button>\n      );\n    } else if (currentStep === allQuestions.length) {\n      return (\n        <button className=\"quiz-btn submit-button\" onClick={handleSubmitBtn}>\n          <p>Submit</p>\n        </button>\n      );\n    }\n    return null;\n  };\n\n  const handleOptionChange = (event) => {\n    setCurrentAns(event.target.value);\n\n    let newState = allChosenAns;\n    newState[currentQuestion].selectedOption = event.target.value;\n\n    setAllAns(newState);\n  };\n\n  const setupQuiz = (questions) => {\n    let questionsData = [];\n    let answerData = [];\n\n    if (questions.length === 0) {\n      setEmpty(true);\n      setRedirect(true);\n      return;\n    }\n\n    questions.map((question) => {\n      let questionObj = {\n        q_id: question.questionId,\n        text: question.description,\n        options: question.options,\n      };\n      questionsData.push(questionObj);\n\n      let ansObj = {\n        quesId: question.questionId,\n        selectedOption: null,\n      };\n\n      answerData.push(ansObj);\n    });\n\n    setQuestions(questionsData);\n    setAllAns(answerData);\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (!pageVisible) {\n      setTabChange(true);\n      setRedirect(true);\n      return;\n    }\n  }, [pageVisible]);\n\n  useEffect(() => {\n    if (restartStatus !== 1) {\n      let endTime = Number(startTime) + duration * 60 * 1000;\n      if (!loading && endTime > 0 && Number(endTime) < Number(Date.now())) {\n        timesUp();\n        return;\n      } else {\n        setTimeout(() => {\n          setTimeRemaining(\n            countdown(\n              new Date(),\n              new Date(Number(endTime)),\n              countdown.MINUTES | countdown.SECONDS\n            ).toString()\n          );\n        }, 1000);\n      }\n    }\n  });\n\n  useEffect(() => {\n    let token = localStorage.getItem('authToken');\n    if (token === null) {\n      setRedirect(true);\n      return;\n    }\n\n    if (props.location.state === undefined) {\n      setRedirect(true);\n      return;\n    } else {\n      setQuizId(props.location.state.id);\n      setDuration(props.location.state.duration);\n      setStartTime(props.location.state.start);\n      setQuestions(props.location.state.questions);\n      setupQuiz(props.location.state.questions);\n      setRestartStatus(props.location.state.restartStatus);\n    }\n  }, []);\n\n  if (redirect) {\n    return (\n      <Redirect\n        to={{\n          pathname: '/dashboard',\n          state: {\n            blocked: tabChange,\n            timeUp: timeUp,\n            emptyQuiz: empty,\n          },\n        }}\n      />\n    );\n  } else if (resultRedirect) {\n    return <Redirect to={`/results/${quizId}`} />;\n  } else if (submitLoading) {\n    return <SubmitLoading />;\n  } else {\n    return loading ? (\n      <Loading />\n    ) : (\n      <div className=\"quiz-page\">\n        <Grid container xs={12} spacing={5} className=\"quiz-container\">\n          <Grid item xs={10} md={8} lg={7} className=\"q-count\">\n            <h2 style={{ padding: 0 }}>\n              QUESTION {currentStep} OF {allQuestions.length}\n            </h2>\n          </Grid>\n          <Grid item xs={10} md={8} lg={7} className=\"timer\">\n            <p style={{ margin: 0 }}>\n              Time Remaining{' '}\n              <h2 className=\"rem-time-display\">\n                {restartStatus !== 1\n                  ? timeRemaining\n                  : 'Until organizer closes the quiz'}\n              </h2>\n            </p>\n          </Grid>\n          <Grid\n            item\n            xs={10}\n            md={8}\n            lg={7}\n            style={{\n              margin: 0,\n              padding: '2%',\n              borderBottom: '3px solid #222',\n              minHeight: '30vh',\n            }}\n          >\n            <FormControl\n              style={{ margin: 'auto', width: '100%' }}\n              component=\"fieldset\"\n            >\n              <FormLabel className=\"label\" component=\"legend\">\n                <p className=\"question\">{allQuestions[currentQuestion].text}</p>\n              </FormLabel>\n              <RadioGroup\n                aria-label=\"correct-choice\"\n                value={currentAns}\n                onChange={handleOptionChange}\n              >\n                {allQuestions[currentQuestion].options.map((option) => {\n                  return (\n                    <FormControlLabel\n                      key={option._id}\n                      value={option.text}\n                      control={<Radio className=\"radio\" />}\n                      label={option.text}\n                      style={{ margin: 0 }}\n                    />\n                  );\n                })}\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n          <Grid item xs={10} md={8} lg={7} className=\"button\">\n            <Grid item xs={6} className=\"button\">\n              {previousButton()}\n            </Grid>\n            <Grid item xs={6} className=\"button\">\n              {nextButton()}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Dialog\n          open={confirmModal}\n          onClose={onCloseHandle}\n          aria-labelledby=\"form-dialog-title\"\n          PaperProps={{\n            style: {\n              backgroundColor: 'white',\n              color: '#333',\n              minWidth: '10%',\n            },\n          }}\n        >\n          <DialogTitle>Are you sure you want to submit the quiz?</DialogTitle>\n          <div className=\"btn-div\">\n            <Button className=\"logout-btn m-right\" onClick={handleSubmit}>\n              Yes\n            </Button>\n            <Button className=\"cancel-btn m-left\" onClick={onCloseHandle}>\n              No\n            </Button>\n          </div>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default Quiz;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Typography, Container } from \"@material-ui/core\";\n\nimport './ErrorPage.css';\n\nfunction ErrorPage() {\n\treturn (\n\t\t<div className=\"error-section\">\n\t\t\t<Container>\n\t\t\t\t<Typography variant=\"h2\" className=\"error-msg\">Oops! Looks like there is nothing on this URL!</Typography>\n\t\t\t</Container>\n\t\t</div>\n\t)\n}\n\nexport default ErrorPage;","import React, { useState, useEffect } from 'react';\nimport { Container, Button, Typography } from '@material-ui/core';\nimport TextInput from '../components/TextInput';\nimport EmailValidator from 'email-validator';\nimport './ForgotPassword.css';\nimport axios from 'axios';\nimport Loading from './Loading';\nimport { Alert } from '@material-ui/lab';\nimport { Redirect } from 'react-router';\nimport { useGoogleReCaptcha } from 'react-google-recaptcha-v3';\n\nfunction ForgotPassword(props) {\n  const [userType] = useState(props.match.params.type);\n\n  const [email, changeEmail] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [emailChanged, setEmailChanged] = useState(false);\n\n  const [password, changePassword] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [passwordChanged, setPasswordChanged] = useState(false);\n  const [confirmPassword, setConfirmedPassword] = useState('');\n  const [confirmPasswordError, setConfirmedPasswordError] = useState('');\n\n  const [reset, setReset] = useState(true);\n  const [resetCode, setResetCode] = useState('');\n  const [resetCodeError, setResetCodeError] = useState('');\n  const [resetCodeChanged, setResetCodeChanged] = useState(false);\n\n  const [tokenSent, setTokenSent] = useState(false);\n  const [invalidKey, setInvalidKey] = useState(false);\n  const [expiredKey, setExpiredKey] = useState(false);\n  const [notSent, setNotSent] = useState(false);\n  const [passwordConfirmed, setPasswordConfirmed] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [redirect, setRedirect] = useState(false);\n  const [loginRedirect, setLoginRedirect] = useState(false);\n\n  const { executeRecaptcha } = useGoogleReCaptcha();\n\n  const handleEmailChange = (event) => {\n    setEmailChanged(true);\n    changeEmail(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPasswordChanged(true);\n    changePassword(event.target.value);\n  };\n\n  const handleConfirmPasswordChange = (event) => {\n    setConfirmedPassword(event.target.value);\n  };\n\n  const handleResetCodeChange = (event) => {\n    setResetCodeChanged(true);\n    setResetCode(event.target.value);\n  };\n\n  const keyPress = (event) => {\n    if (event.key === 'Enter') {\n      if (tokenSent) {\n        handleSubmit();\n      } else {\n        handleReset();\n      }\n    }\n  };\n\n  const mailErrorText = 'Email cannot be empty!';\n  const resetCodeErrorText = 'Enter the reset code.';\n  const passwordErrorText = 'Password cannot be empty!';\n  const confirmPasswordErrorText = 'Does not match the password!';\n\n  const handleReset = async (event) => {\n    // event.preventDefault();\n\n    setEmailChanged(true);\n\n    let errors = false;\n\n    if (email.length === 0) {\n      setEmailError(mailErrorText);\n      errors = true;\n    } else if (!EmailValidator.validate(email)) {\n      setEmailError('Invalid email address!');\n      errors = true;\n    }\n\n    if (!errors && emailError.length === 0) {\n      setLoading(true);\n      let captcha = await executeRecaptcha('forgot_pass');\n\n      let url = null;\n      if (userType === 'organizer') {\n        url = `http://psmcq.online/admin/forgot`;\n      } else if (userType === 'user') {\n        url = `http://psmcq.online/user/forgot`;\n      }\n\n      let data = {\n        email: email,\n        captcha: captcha,\n      };\n\n      try {\n        await axios.post(url, data).then((res) => {\n          setTokenSent(true);\n        });\n      } catch (error) {\n        if (error.response.status === 400) {\n          setNotSent(true);\n        }\n        console.log(error);\n      }\n    }\n    setLoading(false);\n  };\n\n  const handleSubmit = async (event) => {\n    // event.preventDefault();\n\n    let errors = false;\n\n    if (confirmPassword !== password) {\n      errors = true;\n      setConfirmedPasswordError(confirmPasswordErrorText);\n    }\n\n    if (!errors) {\n      setLoading(true);\n      let url = null;\n\n      if (userType === 'organizer') {\n        url = `http://psmcq.online/admin/resetpass`;\n      } else if (userType === 'user') {\n        url = `http://psmcq.online/user/resetpass`;\n      }\n      let captcha = await executeRecaptcha('reset_pass');\n\n      let data = {\n        resetKey: resetCode,\n        newPassword: password,\n        captcha: captcha,\n      };\n\n      let response = null;\n      try {\n        await axios.post(url, data).then((res) => {\n          setReset(false);\n          setPasswordConfirmed(true);\n        });\n      } catch (error) {\n        setReset(false);\n        if (error.response.status === 400) {\n          setInvalidKey(true);\n        } else if (error.response.status === 401) {\n          setExpiredKey(true);\n        }\n        console.log(error);\n      }\n\n      changePassword('');\n      setConfirmedPassword('');\n      setResetCode('');\n      setPasswordChanged(false);\n      setResetCodeChanged(false);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (\n      props.match.params.type !== 'user' &&\n      props.match.params.type !== 'organizer'\n    ) {\n      setRedirect(true);\n      return;\n    }\n    if (email.length === 0) setEmailError(mailErrorText);\n    else setEmailError('');\n\n    if (password.length === 0) setPasswordError(passwordErrorText);\n    else setPasswordError('');\n\n    if (resetCode.length === 0) setResetCodeError(resetCodeErrorText);\n    else setResetCodeError('');\n  }, [email, password, resetCode]);\n\n  useEffect(() => {\n    if (passwordConfirmed) {\n      setTimeout(() => {\n        setLoginRedirect(true);\n      }, 1500);\n    }\n  }, [passwordConfirmed]);\n\n  if (loading) return <Loading />;\n  else if (redirect) return <Redirect to=\"/\" />;\n  else if (loginRedirect) return <Redirect to={`/login/${userType}`} />;\n  else if (!tokenSent) {\n    return (\n      <Container className=\"login-page\">\n        <div className=\"login-form\">\n          <Typography\n            variant=\"h3\"\n            color=\"primary\"\n            className=\"login-head forgot-head\"\n          >\n            Forgot Password\n          </Typography>\n          <br />\n          {notSent ? (\n            <Alert severity=\"error\" color=\"warning\">\n              We couldn't find a user with that e-mail address.\n            </Alert>\n          ) : null}\n          <form className=\"form\">\n            <TextInput\n              error={\n                emailChanged ? (emailError.length === 0 ? false : true) : false\n              }\n              helperText={\n                emailChanged\n                  ? emailError.length === 0\n                    ? null\n                    : emailError\n                  : null\n              }\n              id=\"email\"\n              label=\"Email\"\n              type=\"email\"\n              className=\"form-input\"\n              variant=\"outlined\"\n              value={email}\n              onChange={handleEmailChange}\n              onKeyPress={keyPress}\n            ></TextInput>\n          </form>\n          <Button className=\"login-btn\" onClick={handleReset}>\n            Send mail\n          </Button>\n        </div>\n      </Container>\n    );\n  } else if (tokenSent) {\n    return (\n      <Container className=\"login-page\">\n        <div className=\"login-form\">\n          <Typography\n            variant=\"h3\"\n            color=\"primary\"\n            className=\"login-head forgot-head\"\n          >\n            Forgot Password\n          </Typography>\n          <br />\n          {reset ? <Alert severity=\"info\">Reset code sent!</Alert> : null}\n          {invalidKey ? (\n            <Alert severity=\"error\" color=\"warning\">\n              Invalid reset Code\n            </Alert>\n          ) : null}\n          {expiredKey ? (\n            <Alert severity=\"error\" color=\"warning\">\n              Reset Code expired!\n            </Alert>\n          ) : null}\n          {passwordConfirmed ? (\n            <Alert severity=\"success\" color=\"warning\">\n              Password reset successful! Redirecting...\n            </Alert>\n          ) : null}\n          <form className=\"form\">\n            <TextInput\n              error={\n                resetCodeChanged\n                  ? resetCodeError.length === 0\n                    ? false\n                    : true\n                  : false\n              }\n              helperText={\n                resetCodeChanged\n                  ? resetCodeError.length === 0\n                    ? null\n                    : resetCodeError\n                  : null\n              }\n              id=\"reset-code\"\n              label=\"Reset Code\"\n              type=\"text\"\n              className=\"form-input\"\n              variant=\"outlined\"\n              value={resetCode}\n              onChange={handleResetCodeChange}\n              onKeyPress={keyPress}\n            ></TextInput>\n            <TextInput\n              error={\n                passwordChanged\n                  ? passwordError.length === 0\n                    ? false\n                    : true\n                  : false\n              }\n              helperText={\n                passwordChanged\n                  ? passwordError.length === 0\n                    ? null\n                    : passwordError\n                  : null\n              }\n              id=\"password\"\n              label=\"New Password\"\n              type=\"password\"\n              className=\"form-input\"\n              variant=\"outlined\"\n              value={password}\n              onChange={handlePasswordChange}\n              onKeyPress={keyPress}\n            ></TextInput>\n            <TextInput\n              error={confirmPasswordError.length === 0 ? false : true}\n              helperText={confirmPasswordError}\n              id=\"confirm-password\"\n              label=\"Confirm Password\"\n              type=\"password\"\n              className=\"form-input\"\n              variant=\"outlined\"\n              value={confirmPassword}\n              onChange={handleConfirmPasswordChange}\n              onKeyPress={keyPress}\n            ></TextInput>\n          </form>\n          <Button className=\"login-btn\" onClick={handleSubmit}>\n            Reset Password\n          </Button>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default ForgotPassword;\n","import React, { useState } from \"react\";\nimport './ProfileSection.css';\nimport { Typography, Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nfunction ProfileSection(props) {\n\tconst [userType, setUserType] = useState(props.type);\n\tconst profile = props.profile;\n\n\treturn (\n\t\t<div className=\"profile-section\">\n\t\t\t<Typography variant=\"h6\" className=\"profile-param\">Name: <span className=\"profile-data\">{profile.name}</span></Typography>\n\t\t\t<Typography variant=\"h6\" className=\"profile-param\">E-mail: <span className=\"profile-data resp-text\">{profile.email}</span></Typography>\n\t\t\t<Typography variant=\"h6\" className=\"profile-param\">Phone Number: <span className=\"profile-data\">{profile.mobileNumber}</span></Typography>\n\t\t\t{userType === \"user\" ?\n\t\t\t\t<div>\n\t\t\t\t\t<Typography variant=\"h6\" className=\"profile-param\">Quizzes Enrolled: <span className=\"profile-data\">{profile.quizzesEnrolled.length}</span></Typography>\n\t\t\t\t\t<Typography variant=\"h6\" className=\"profile-param\">Quizzes Completed: <span className=\"profile-data\">{profile.quizzesGiven.length}</span></Typography>\n\t\t\t\t</div>\n\t\t\t: <Typography variant=\"h6\" className=\"profile-param\">Quizzes Created: <span className=\"profile-data\">{profile.quizzes.length}</span></Typography> }\n\t\t\t<div className=\"m-top\">\n\t\t\t\t<Button className=\"profile-btn update-prof-btn\" component={Link} to={`/updateProfile/${userType}`}>Update Profile</Button>\n\t\t\t\t{profile.googleId === undefined ? <Button className=\"profile-btn\" component={Link} to={`/updatePassword/${userType}`}>Update Password</Button> : null }\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default ProfileSection;","import React from \"react\";\nimport {CircularProgress} from \"@material-ui/core\";\nimport '../pages/Loading.css';\n\nfunction QuizLoading() {\n\treturn (\n\t\t<div className=\"loading-screen\">\n\t\t\t<CircularProgress color=\"primary\" />\n\t\t\t<div className=\"loader\">Loading Quizzes\n\t\t\t\t<span className=\"loader__dot\">.</span>\n\t\t\t\t<span className=\"loader__dot\">.</span>\n\t\t\t\t<span className=\"loader__dot\">.</span></div>\n\t\t</div>\n\t);\n}\n\nexport default QuizLoading;","import React, { useState, useEffect } from 'react';\nimport './HistorySection.css';\nimport {\n  GridList,\n  GridListTile,\n  GridListTileBar,\n  Tooltip,\n  IconButton,\n  isWidthUp,\n  withWidth,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n} from '@material-ui/core';\nimport { Check, Create, Settings, ArrowForwardIos } from '@material-ui/icons';\nimport axios from 'axios';\nimport QuizLoading from './QuizLoading';\nimport { Link } from 'react-router-dom';\n\nfunction HistorySection(props) {\n  const [userType, setUserType] = useState(props.type);\n  const [profile, setProfile] = useState(props.profile);\n  const [quizzes, setQuizzes] = useState([]);\n\n  const [loading, setLoading] = useState(true);\n\n  const getCols = () => {\n    if (isWidthUp('md', props.width)) {\n      return 3;\n    }\n\n    return 2;\n  };\n\n  const getQuizzes = async () => {\n    let token = localStorage.getItem('authToken');\n    let url = null;\n\n    if (userType === 'admin') url = 'http://psmcq.online/admin/created';\n    else url = 'http://psmcq.online/user/quizzesGiven';\n\n    try {\n      await axios\n        .get(url, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          let quizL = res.data.result.sort(function (a, b) {\n            return a.scheduledFor - b.scheduledFor;\n          });\n          setQuizzes(quizL);\n          setLoading(false);\n        });\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getQuizzes();\n  }, []);\n\n  if (loading) {\n    return <QuizLoading />;\n  } else if (userType === 'admin') {\n    return (\n      <div className=\"history-section\">\n        {quizzes.length === 0 ? (\n          <p style={{ textAlign: 'center' }}>\n            You have not created any quizzes yet!\n          </p>\n        ) : (\n          <GridList cols={getCols()} className=\"grid-list\">\n            {quizzes.map((quiz) => (\n              <GridListTile key={quiz._id} className=\"quiz-tile\">\n                <img src=\"../CC LOGO-01.svg\" />\n                <GridListTileBar\n                  title={quiz.quizName}\n                  subtitle={`By: You`}\n                  actionIcon={\n                    <Tooltip title=\"Settings\">\n                      <IconButton\n                        aria-label={`edit ${quiz.quizName}`}\n                        component={Link}\n                        to={`/editQuiz/${quiz._id}`}\n                      >\n                        <Settings className=\"enroll-icon\" />\n                      </IconButton>\n                    </Tooltip>\n                  }\n                />\n              </GridListTile>\n            ))}\n          </GridList>\n        )}\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"history-section\">\n        {profile.quizzesGiven.length === 0 ? (\n          <p style={{ textAlign: 'center' }}>\n            You have not given any quizzes yet!\n          </p>\n        ) : (\n          <List aria-label=\"quiz display\" className=\"owner-quiz-list\">\n            {quizzes.map((quiz) =>\n              quiz.quizId !== null ? (\n                <ListItem\n                  button\n                  className=\"owner-quiz-item\"\n                  component={Link}\n                  key={quiz._id}\n                  to={`/results/${quiz.quizId._id}`}\n                >\n                  <ListItemText\n                    primary={quiz.quizId.quizName}\n                    secondary={`Scored: ${quiz.marks}`}\n                  />\n                  <ListItemSecondaryAction>\n                    <IconButton\n                      edge=\"end\"\n                      aria-label=\"details\"\n                      component={Link}\n                      to={`/results/${quiz.quizId._id}`}\n                    >\n                      <ArrowForwardIos />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ) : null\n            )}\n          </List>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withWidth()(HistorySection);\n","import React, { useState, useEffect } from 'react';\nimport './QuizzesSection.css';\nimport axios from 'axios';\nimport QuizLoading from './QuizLoading';\nimport {\n  GridList,\n  GridListTile,\n  GridListTileBar,\n  Typography,\n  Button,\n  Dialog,\n  isWidthUp,\n  withWidth,\n  IconButton,\n  Tooltip,\n  Snackbar,\n  DialogTitle,\n} from '@material-ui/core';\nimport { Add, Check, Info, Block, PlayCircleFilled } from '@material-ui/icons';\nimport TextInput from './TextInput';\nimport { Alert } from '@material-ui/lab';\nimport { Link, Redirect } from 'react-router-dom';\nimport Loading from '../pages/Loading';\nimport countdown from 'countdown';\nimport { useGoogleReCaptcha } from 'react-google-recaptcha-v3';\n\nfunction QuizzesSection(props) {\n  const [loading, setLoading] = useState(true);\n  const [userType, setUserType] = useState(props.type);\n  const [profile, setProfile] = useState(props.profile);\n  const [quizzes, setQuizzes] = useState([]);\n  const [quizzesEnrolled, setQuizzesEnrolled] = useState([]);\n\n  const [joinModal, setJoinModal] = useState(false);\n  const [quizCode, setQuizCode] = useState('');\n  const [quizCodeError, setQuizCodeError] = useState(false);\n\n  const [enrollModal, setEnrollModal] = useState(false);\n  const [enrollQuizName, setEnrollQuiz] = useState('');\n  const [enrollQuizId, setEnrollQuizId] = useState('');\n\n  const [enrollSnack, setEnrollSnack] = useState(false);\n  const [snackbar, setSnackBar] = useState(false);\n  const [errorSnack, setErrorSnack] = useState(false);\n\n  const [infoModal, setInfoModal] = useState(false);\n  const [infoLoading, setInfoLoading] = useState(false);\n  const [currQuiz, setCurrQuiz] = useState({});\n  const [timeRemain, setTimeRemain] = useState('');\n\n  const [startModal, setStartModal] = useState(false);\n  const [quizStarted, setQuizStarted] = useState(false);\n  const [redirectId, setRedirectId] = useState('');\n  const [quizDetails, setQuizDetails] = useState({});\n\n  const [earlyError, setEarlyError] = useState(false);\n  const [lateError, setLateError] = useState(false);\n  const [givenSnack, setGivenSnack] = useState(false);\n  const [privateWrongCode, setPrivateWrongCode] = useState(false);\n  const [alreadyEnrolled, setAlreadyEnrolled] = useState(false);\n\n  const setRefresh = props.refresh;\n\n  const { executeRecaptcha } = useGoogleReCaptcha();\n\n  const getCols = () => {\n    if (isWidthUp('md', props.width)) {\n      return 3;\n    }\n\n    return 2;\n  };\n\n  const getInfoWidth = () => {\n    if (isWidthUp('sm', props.width)) {\n      return '45%';\n    }\n\n    return '80%';\n  };\n\n  const onCloseHandle = () => {\n    setJoinModal(false);\n    setInfoModal(false);\n    setStartModal(false);\n\n    setQuizCode('');\n    setQuizCodeError(false);\n    setEnrollModal(false);\n    setEnrollQuiz('');\n    setEnrollQuizId('');\n    setTimeRemain('');\n    setCurrQuiz({});\n  };\n\n  const onJoinClick = () => {\n    setJoinModal(true);\n  };\n\n  const handleJoinChange = (event) => {\n    setQuizCode(event.target.value);\n  };\n\n  const handleEnrollButton = (quiz) => {\n    setEnrollQuiz(quiz.quizName);\n    setEnrollQuizId(quiz._id);\n    setEnrollModal(true);\n  };\n\n  const handleInfoButton = (quiz) => {\n    setInfoModal(true);\n    getQuizInfo(quiz.quizId._id);\n  };\n\n  const handleStartButton = (quiz) => {\n    setEnrollQuiz(quiz.quizId.quizName);\n    setEnrollQuizId(quiz.quizId._id);\n    setStartModal(true);\n  };\n\n  const getQuizInfo = async (id) => {\n    setInfoLoading(true);\n\n    let token = localStorage.getItem('authToken');\n    let url = `http://psmcq.online/quiz/${id}`;\n\n    try {\n      await axios\n        .get(url, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          setCurrQuiz(res.data.result);\n          setInfoLoading(false);\n        });\n    } catch (error) {\n      console.log(error);\n      onCloseHandle();\n      setInfoLoading(false);\n    }\n  };\n\n  const handleJoinSubmit = async () => {\n    if (quizCode.trim().length === 0) {\n      setQuizCodeError(true);\n      return;\n    }\n    setQuizCodeError(false);\n    setEnrollSnack(true);\n    let url = 'http://psmcq.online/quiz/enrollPrivate';\n    let token = localStorage.getItem('authToken');\n\n    let captcha = await executeRecaptcha('join_private');\n\n    let data = {\n      quizCode: quizCode,\n      captcha: captcha,\n    };\n\n    try {\n      await axios\n        .patch(url, data, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          setRefresh(true);\n          onCloseHandle();\n          setSnackBar(true);\n        });\n    } catch (error) {\n      setEnrollSnack(false);\n      if (error.response.status === 404) {\n        setPrivateWrongCode(true);\n      } else if (error.response.status === 409) {\n        setAlreadyEnrolled(true);\n      } else {\n        setErrorSnack(true);\n      }\n    }\n  };\n\n  const handleEnroll = async () => {\n    setEnrollSnack(true);\n    let token = localStorage.getItem('authToken');\n    let url = 'http://psmcq.online/quiz/enroll';\n\n    let captcha = await executeRecaptcha('quiz_enroll');\n\n    let data = {\n      quizId: enrollQuizId,\n      captcha: captcha,\n    };\n\n    try {\n      await axios\n        .patch(url, data, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          setRefresh(true);\n          onCloseHandle();\n          setSnackBar(true);\n        });\n    } catch (error) {\n      console.log(error);\n      setErrorSnack(true);\n    }\n  };\n\n  const handleUnenroll = async () => {\n    setEnrollSnack(true);\n    let token = localStorage.getItem('authToken');\n    let url = 'http://psmcq.online/quiz/unenroll';\n\n    let captcha = await executeRecaptcha('quiz_unenroll');\n\n    let data = {\n      quizId: currQuiz._id,\n      captcha: captcha,\n    };\n\n    try {\n      await axios\n        .patch(url, data, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          setRefresh(true);\n        });\n    } catch (error) {\n      console.log(error);\n      setErrorSnack(true);\n    }\n  };\n\n  const handleQuizStart = async () => {\n    setEnrollSnack(true);\n    let token = localStorage.getItem('authToken');\n    let url = `http://psmcq.online/quiz/start`;\n\n    let captcha = await executeRecaptcha('quiz_start');\n\n    let data = {\n      quizId: enrollQuizId,\n      captcha: captcha,\n    };\n\n    try {\n      await axios\n        .patch(url, data, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          setRedirectId(data.quizId);\n          setQuizDetails(res.data);\n          setQuizStarted(true);\n        });\n    } catch (error) {\n      setEnrollSnack(false);\n      if (error.response.status === 401) {\n        setEarlyError(true);\n      } else if (error.response.status === 402) {\n        setLateError(true);\n      } else if (error.response.status === 405) {\n        setGivenSnack(true);\n      }\n    }\n  };\n\n  const setupEnrolled = () => {\n    let quizzes = [];\n\n    profile.quizzesEnrolled.map((quiz) => {\n      if (!profile.quizzesGiven.find((o) => o.quizId === quiz.quizId._id)) {\n        quizzes.push(quiz);\n      }\n    });\n\n    setQuizzesEnrolled(quizzes);\n  };\n\n  const getQuizzes = async () => {\n    setLoading(true);\n    let token = localStorage.getItem('authToken');\n    let url = 'http://psmcq.online/quiz/all';\n\n    let quizList = [];\n\n    try {\n      await axios\n        .get(url, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          res.data.result.map((quiz) => {\n            if (quiz.quizType === 'public') {\n              if (userType === 'user') {\n                if (\n                  !profile.quizzesEnrolled.find(\n                    (o) => o.quizId._id === quiz._id\n                  )\n                )\n                  quizList.push(quiz);\n              } else quizList.push(quiz);\n            }\n          });\n\n          quizList.sort(function (a, b) {\n            return a.scheduledFor - b.scheduledFor;\n          });\n\n          setQuizzes(quizList);\n          setLoading(false);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (infoModal) {\n      if (currQuiz.scheduledFor <= Date.now()) {\n        setTimeRemain('Already Started!');\n      } else {\n        setTimeout(() => {\n          setTimeRemain(\n            countdown(\n              new Date(),\n              new Date(Number(currQuiz.scheduledFor))\n            ).toString()\n          );\n        }, 1000);\n      }\n    }\n  });\n\n  useEffect(() => {\n    if (userType === 'user') setupEnrolled();\n    getQuizzes();\n  }, []);\n\n  if (loading) {\n    return <QuizLoading />;\n  } else if (quizStarted) {\n    return (\n      <Redirect\n        to={{\n          pathname: `/quiz`,\n          state: {\n            questions: quizDetails.data,\n            duration: quizDetails.duration,\n            start: quizDetails.scheduledFor,\n            id: enrollQuizId,\n            timeStarted: Date.now(),\n            restartStatus: quizDetails.quizRestart,\n          },\n        }}\n      />\n    );\n  } else {\n    return (\n      <div className=\"quizzes-section\">\n        <div className=\"quiz-btn-section\">\n          {userType === 'user' ? (\n            <Button className=\"join-quiz-btn\" onClick={onJoinClick}>\n              <Check />\n              Join a Quiz\n            </Button>\n          ) : null}\n          {userType === 'admin' ? (\n            <Button\n              className=\"create-quiz-btn\"\n              component={Link}\n              to=\"/createQuiz\"\n            >\n              <Add />\n              Create a quiz\n            </Button>\n          ) : null}\n        </div>\n        {userType === 'user' ? (\n          <div className=\"enrolled-list\">\n            <Typography variant=\"h5\" className=\"up-quizzes\">\n              Enrolled Quizzes\n            </Typography>\n            {quizzesEnrolled.length === 0 ? (\n              <p style={{ textAlign: 'center' }}>\n                Sorry! No quizzes available at the moment!\n              </p>\n            ) : (\n              <div className=\"quiz-list root1\">\n                <GridList cols={getCols()} className=\"grid-list btn-set\">\n                  {quizzesEnrolled.map((quiz) => (\n                    <GridListTile key={quiz._id} className=\"quiz-tile\">\n                      <img src=\"../CC LOGO-01.svg\" />\n                      <GridListTileBar\n                        title={quiz.quizId.quizName}\n                        actionIcon={\n                          <div className=\"inline\">\n                            <Tooltip title=\"Start Quiz\">\n                              <IconButton\n                                aria-label={`start ${quiz.quizId.quizName}`}\n                                onClick={() => handleStartButton(quiz)}\n                              >\n                                <PlayCircleFilled className=\"enroll-icon\" />\n                              </IconButton>\n                            </Tooltip>\n                            <Tooltip title=\"Info\">\n                              <IconButton\n                                aria-label={`info ${quiz.quizId.quizName}`}\n                                onClick={() => handleInfoButton(quiz)}\n                              >\n                                <Info className=\"enroll-icon\" />\n                              </IconButton>\n                            </Tooltip>\n                          </div>\n                        }\n                      />\n                    </GridListTile>\n                  ))}\n                </GridList>\n              </div>\n            )}\n          </div>\n        ) : null}\n        <Typography variant=\"h5\" className=\"up-quizzes\">\n          Upcoming Quizzes\n        </Typography>\n        {quizzes.length === 0 ? (\n          <p style={{ textAlign: 'center' }}>\n            Sorry! No quizzes available at the moment!\n          </p>\n        ) : (\n          <div className=\"quiz-list root1\">\n            <GridList cols={getCols()} className=\"grid-list\">\n              {quizzes.map((quiz) => (\n                <GridListTile key={quiz._id} className=\"quiz-tile\">\n                  <img src=\"../CC LOGO-01.svg\" />\n                  <GridListTileBar\n                    title={quiz.quizName}\n                    subtitle={`By: ${quiz.adminId.name}`}\n                    actionIcon={\n                      userType === 'user' ? (\n                        <Tooltip title=\"Enroll\">\n                          <IconButton\n                            aria-label={`enroll ${quiz.quizName}`}\n                            onClick={() => handleEnrollButton(quiz)}\n                          >\n                            <Check className=\"enroll-icon\" />\n                          </IconButton>\n                        </Tooltip>\n                      ) : null\n                    }\n                  />\n                </GridListTile>\n              ))}\n            </GridList>\n          </div>\n        )}\n        <Dialog\n          open={joinModal}\n          onClose={onCloseHandle}\n          aria-labelledby=\"join-quiz-modal\"\n          PaperProps={{\n            style: {\n              backgroundColor: 'white',\n              color: '#333',\n              minWidth: '30%',\n            },\n          }}\n          style={{ width: '100%' }}\n        >\n          <div className=\"modal-info\">\n            {userType === 'admin' ? (\n              <Typography variant=\"h6\" className=\"type-head join-sub\">\n                Organizers cannot enroll in quizzes.\n              </Typography>\n            ) : (\n              <div\n                style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                }}\n              >\n                <Typography variant=\"h5\" className=\"type-head\">\n                  JOIN A PRIVATE QUIZ\n                </Typography>\n                <Typography variant=\"h6\" className=\"type-head join-sub\">\n                  Enter the code of the quiz you want to join\n                </Typography>\n                <TextInput\n                  error={quizCodeError}\n                  helperText={quizCodeError ? 'Required' : null}\n                  label=\"Quiz Code\"\n                  variant=\"outlined\"\n                  value={quizCode}\n                  onChange={handleJoinChange}\n                  className=\"quiz-code-field\"\n                />\n                <Button\n                  className=\"join-quiz-btn join-modal-btn\"\n                  onClick={handleJoinSubmit}\n                >\n                  Join!\n                </Button>\n              </div>\n            )}\n          </div>\n        </Dialog>\n        <Dialog\n          open={enrollModal}\n          onClose={onCloseHandle}\n          aria-labelledby=\"enroll-quiz-modal\"\n          PaperProps={{\n            style: {\n              backgroundColor: 'white',\n              color: '#333',\n              minWidth: '30%',\n            },\n          }}\n          style={{ width: '100%' }}\n        >\n          <div className=\"modal-info\">\n            {userType === 'admin' ? (\n              <Typography variant=\"h6\" className=\"type-head join-sub\">\n                Organizers cannot enroll in quizzes.\n              </Typography>\n            ) : (\n              <div>\n                <Typography\n                  variant=\"h6\"\n                  className=\"type-head join-sub\"\n                >{`Are you sure you want to join ${enrollQuizName}?`}</Typography>\n                <div className=\"btn-div m-top\">\n                  {/* classes in Navbar.css */}\n                  <Button className=\"logout-btn m-right\" onClick={handleEnroll}>\n                    Yes\n                  </Button>\n                  <Button className=\"cancel-btn m-left\" onClick={onCloseHandle}>\n                    No\n                  </Button>\n                </div>\n              </div>\n            )}\n          </div>\n        </Dialog>\n        <Dialog\n          open={startModal}\n          onClose={onCloseHandle}\n          aria-labelledby=\"start-quiz-modal\"\n          PaperProps={{\n            style: {\n              backgroundColor: 'white',\n              color: '#333',\n              minWidth: '30%',\n            },\n          }}\n          style={{ width: '100%' }}\n        >\n          <div className=\"modal-info\">\n            <div>\n              <Typography\n                variant=\"h6\"\n                className=\"type-head join-sub\"\n              >{`Are you sure you want to start ${enrollQuizName}?`}</Typography>\n              <div className=\"btn-div m-top2 start-div\">\n                {/* classes in Navbar.css */}\n                <Button\n                  className=\"logout-btn m-right\"\n                  onClick={handleQuizStart}\n                >\n                  Yes\n                </Button>\n                <Button className=\"cancel-btn m-left\" onClick={onCloseHandle}>\n                  No\n                </Button>\n              </div>\n            </div>\n          </div>\n        </Dialog>\n        <Dialog\n          open={infoModal}\n          onClose={onCloseHandle}\n          aria-labelledby=\"info-quiz-modal\"\n          PaperProps={{\n            style: {\n              backgroundColor: 'white',\n              color: '#333',\n              minWidth: getInfoWidth(),\n              maxHeight: '45%',\n            },\n          }}\n          style={{ width: '100%' }}\n        >\n          <DialogTitle style={{ textAlign: 'center', fontWeight: 'bold' }}>\n            Quiz Info\n          </DialogTitle>\n\n          {/* From the profile section */}\n          {infoLoading ? (\n            <Loading />\n          ) : (\n            <div\n              className=\"modal-info no-p-top\"\n              style={{ textAlign: 'center' }}\n            >\n              <Typography variant=\"h6\" className=\"profile-param info-param\">\n                Name: <span className=\"profile-data\">{currQuiz.quizName}</span>\n              </Typography>\n              <Typography variant=\"h6\" className=\"profile-param info-param\">\n                Date:{' '}\n                <span className=\"profile-data\">\n                  {new Date(Number(currQuiz.scheduledFor)).toDateString()}\n                </span>\n              </Typography>\n              <Typography variant=\"h6\" className=\"profile-param info-param\">\n                Time:{' '}\n                <span className=\"profile-data\">\n                  {new Date(Number(currQuiz.scheduledFor)).toLocaleTimeString()}\n                </span>\n              </Typography>\n              <div className=\"time-sec\">\n                <Typography variant=\"h6\" className=\"profile-param info-param\">\n                  <span className=\"profile-data time-rem\">{timeRemain}</span>\n                </Typography>\n              </div>\n              <Button className=\"unenroll-btn\" onClick={handleUnenroll}>\n                <Block style={{ color: 'white' }} />\n                Unenroll\n              </Button>\n            </div>\n          )}\n        </Dialog>\n        <Snackbar\n          open={snackbar}\n          autoHideDuration={2000}\n          onClose={() => setSnackBar(false)}\n        >\n          <Alert\n            variant=\"filled\"\n            severity=\"success\"\n            onClose={() => setSnackBar(false)}\n          >\n            Successfully Enrolled!\n          </Alert>\n        </Snackbar>\n        <Snackbar\n          open={errorSnack}\n          autoHideDuration={2000}\n          onClose={() => setErrorSnack(false)}\n        >\n          <Alert\n            variant=\"filled\"\n            severity=\"error\"\n            onClose={() => setErrorSnack(false)}\n          >\n            There was some error. Please try again!\n          </Alert>\n        </Snackbar>\n        <Snackbar\n          open={enrollSnack}\n          autoHideDuration={5000}\n          onClose={() => setEnrollSnack(false)}\n        >\n          <Alert\n            variant=\"filled\"\n            severity=\"info\"\n            onClose={() => setErrorSnack(false)}\n          >\n            Processing... Please Wait!\n          </Alert>\n        </Snackbar>\n        <Snackbar\n          open={earlyError}\n          autoHideDuration={5000}\n          onClose={() => setEarlyError(false)}\n        >\n          <Alert\n            variant=\"filled\"\n            severity=\"error\"\n            onClose={() => setEarlyError(false)}\n          >\n            The quiz has not yet started!\n          </Alert>\n        </Snackbar>\n        <Snackbar\n          open={lateError}\n          autoHideDuration={5000}\n          onClose={() => setLateError(false)}\n        >\n          <Alert\n            variant=\"filled\"\n            severity=\"error\"\n            onClose={() => setLateError(false)}\n          >\n            This quiz has ended!\n          </Alert>\n        </Snackbar>\n        <Snackbar\n          open={givenSnack}\n          autoHideDuration={5000}\n          onClose={() => setGivenSnack(false)}\n        >\n          <Alert\n            variant=\"filled\"\n            severity=\"error\"\n            onClose={() => setGivenSnack(false)}\n          >\n            Already given this quiz!\n          </Alert>\n        </Snackbar>\n        <Snackbar\n          open={privateWrongCode}\n          autoHideDuration={5000}\n          onClose={() => setPrivateWrongCode(false)}\n        >\n          <Alert\n            variant=\"filled\"\n            severity=\"error\"\n            onClose={() => setPrivateWrongCode(false)}\n          >\n            This quiz code does not exists!\n          </Alert>\n        </Snackbar>\n        <Snackbar\n          open={alreadyEnrolled}\n          autoHideDuration={5000}\n          onClose={() => setAlreadyEnrolled(false)}\n        >\n          <Alert\n            variant=\"filled\"\n            severity=\"error\"\n            onClose={() => setAlreadyEnrolled(false)}\n          >\n            Already enrolled in this quiz!\n          </Alert>\n        </Snackbar>\n      </div>\n    );\n  }\n}\n\nexport default withWidth()(QuizzesSection);\n","import React, { useState, useContext, useEffect } from 'react';\nimport {\n  Container,\n  Typography,\n  AppBar,\n  Tabs,\n  Tab,\n  Snackbar,\n} from '@material-ui/core';\nimport './Dashboard.css';\nimport InfoContext from '../context/InfoContext';\nimport { Redirect } from 'react-router';\nimport Loading from './Loading';\nimport axios from 'axios';\nimport '../components/ProfileSection';\nimport ProfileSection from '../components/ProfileSection';\nimport HistorySection from '../components/HistorySection';\nimport QuizzesSection from '../components/QuizzesSection';\nimport { Alert } from '@material-ui/lab';\n\nfunction Dashboard(props) {\n  const [tab, setTab] = useState(0);\n  const [redirect, setRedirect] = useState(false);\n  const [redirectOwner, setRedirectOwner] = useState(false);\n\n  const [userType, setUserType] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const [refresh, setRefresh] = useState(false);\n\n  const [blockSnack, setBlockSnack] = useState(false);\n  const [timeUpSnack, setTimeUpSnack] = useState(false);\n  const [emptySnack, setEmptySnack] = useState(false);\n\n  const { isLoggedIn } = useContext(InfoContext);\n\n  const handleTabChange = (e, newVal) => {\n    setTab(newVal);\n  };\n\n  const getProfile = async () => {\n    setLoading(true);\n    let url = 'http://psmcq.online/general/checkUser';\n\n    let token = localStorage.getItem('authToken');\n\n    if (token === null) {\n      setRedirect(true);\n      return;\n    }\n\n    let uType = null;\n\n    try {\n      await axios\n        .get(url, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          let type = res.data.result.userType;\n          if (type === 'User') uType = 'user';\n          else if (type === 'Admin') uType = 'admin';\n          else if (type === 'Owner') {\n            uType = 'owner';\n            setRedirectOwner(true);\n          }\n\n          setUserType(uType);\n        });\n    } catch (error) {\n      console.log(error);\n      localStorage.clear();\n      setRedirect(true);\n      return;\n    }\n\n    if (uType === 'owner') return;\n\n    url = `http://psmcq.online/${uType}/`;\n    try {\n      await axios\n        .get(url, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          setProfile(res.data.result1);\n          setLoading(false);\n        });\n    } catch (error) {\n      console.log(error);\n      localStorage.clear();\n      setRedirect(true);\n      return;\n    }\n  };\n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      setRedirect(true);\n      return;\n    } else {\n      getProfile();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (refresh === true) {\n      getProfile();\n      setRefresh(false);\n    }\n  }, [refresh]);\n\n  useEffect(() => {\n    if (Object.keys(props).length !== 0 && props.location.state !== undefined) {\n      if (props.location.state.blocked) {\n        setBlockSnack(true);\n      } else if (props.location.state.timeUp) {\n        setTimeUpSnack(true);\n      } else if (props.location.state.emptyQuiz) {\n        setEmptySnack(true);\n      }\n    }\n  }, []);\n\n  if (redirect) {\n    return <Redirect to=\"/\" />;\n  } else if (redirectOwner) {\n    return <Redirect to=\"/coronilOP\" />;\n  } else if (loading) {\n    return <Loading />;\n  } else {\n    return (\n      <Container className=\"dashboard-page\">\n        <Typography variant=\"h4\" className=\"dash-head\">\n          {userType === 'user' ? 'Dashboard' : \"Organizer's Dashboard\"}\n        </Typography>\n        <div className=\"dash-section\">\n          <AppBar\n            position=\"static\"\n            color=\"default\"\n            className=\"bg-white tab-bar\"\n          >\n            <Tabs\n              value={tab}\n              onChange={handleTabChange}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              variant=\"fullWidth\"\n              aria-label=\"full width tabs dashboard\"\n            >\n              <Tab label=\"Quizzes\" />\n              <Tab label={userType === 'admin' ? 'Your Quizzes' : 'History'} />\n              <Tab label=\"Profile\" />\n            </Tabs>\n          </AppBar>\n          <TabPanel value={tab} index={0}>\n            <QuizzesSection\n              type={userType}\n              profile={profile}\n              refresh={setRefresh}\n            />\n          </TabPanel>\n          <TabPanel value={tab} index={1}>\n            <HistorySection profile={profile} type={userType} />\n          </TabPanel>\n          <TabPanel value={tab} index={2}>\n            <ProfileSection profile={profile} type={userType} />\n          </TabPanel>\n        </div>\n        <Snackbar\n          open={blockSnack}\n          autoHideDuration={5000}\n          onClose={() => setBlockSnack(false)}\n        >\n          <Alert\n            variant=\"filled\"\n            severity=\"error\"\n            onClose={() => setBlockSnack(false)}\n          >\n            You violated the quiz rules!\n          </Alert>\n        </Snackbar>\n        <Snackbar\n          open={timeUpSnack}\n          autoHideDuration={5000}\n          onClose={() => setTimeUpSnack(false)}\n        >\n          <Alert\n            variant=\"filled\"\n            severity=\"error\"\n            onClose={() => setTimeUpSnack(false)}\n          >\n            Time's Up! Your quiz was not submitted!\n          </Alert>\n        </Snackbar>\n        <Snackbar\n          open={emptySnack}\n          autoHideDuration={5000}\n          onClose={() => setEmptySnack(false)}\n        >\n          <Alert\n            variant=\"filled\"\n            severity=\"error\"\n            onClose={() => setEmptySnack(false)}\n          >\n            There are no questions in the quiz.\n          </Alert>\n        </Snackbar>\n      </Container>\n    );\n  }\n}\n\nfunction TabPanel(props) {\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={props.value !== props.index}\n      id={`simple-tabpanel-${props.index}`}\n      aria-labelledby={`simple-tab-${props.index}`}\n    >\n      <div>{props.children}</div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React, { useState, useEffect } from 'react';\nimport './CreateQuiz.css';\nimport {\n  Container,\n  Typography,\n  Grid,\n  Slider,\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n  Snackbar,\n} from '@material-ui/core';\nimport TextInput from '../components/TextInput';\nimport {\n  KeyboardDatePicker,\n  KeyboardTimePicker,\n  MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport axios from 'axios';\nimport { Redirect } from 'react-router';\nimport Loading from '../pages/Loading';\nimport { Alert } from '@material-ui/lab';\nimport { AccessAlarm } from '@material-ui/icons';\nimport {\n  useGoogleRecaptcha,\n  useGoogleReCaptcha,\n} from 'react-google-recaptcha-v3';\n\nfunction CreateQuiz() {\n  const [quizName, setQuizName] = useState('');\n  const [quizDate, setQuizDate] = useState(new Date());\n  const [duration, setDuration] = useState(5);\n  const [type, setType] = useState('private');\n\n  const [loading, setLoading] = useState(false);\n  const [redirect, setRedirect] = useState(false);\n  const [redirectEdit, setRedirectEdit] = useState(false);\n  const [quizId, setQuizId] = useState('');\n\n  const [error, setError] = useState(false);\n\n  const { executeRecaptcha } = useGoogleReCaptcha();\n\n  const onQuizNameChange = (event) => {\n    setQuizName(event.target.value);\n  };\n\n  const handleDateChange = (date) => {\n    setQuizDate(date);\n  };\n\n  const handleTimeChange = (e, val) => {\n    setDuration(val);\n  };\n\n  const onTypeChange = (event) => {\n    setType(event.target.value);\n  };\n\n  const handleSubmit = async () => {\n    setLoading(true);\n    let token = localStorage.getItem('authToken');\n    let url = 'http://psmcq.online/quiz/createQuiz';\n\n    let captcha = await executeRecaptcha('create_quiz');\n\n    let data = {\n      quizName: quizName,\n      scheduledFor: quizDate.getTime(),\n      quizDuration: duration,\n      quizType: type,\n      captcha: captcha,\n    };\n\n    try {\n      await axios\n        .post(url, data, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          setQuizId(res.data.result._id);\n          setLoading(false);\n          setRedirectEdit(true);\n        });\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    let token = localStorage.getItem('authToken');\n    if (token === null) {\n      setLoading(false);\n      setRedirect(true);\n      return;\n    }\n  }, []);\n\n  if (loading) {\n    return <Loading />;\n  } else if (redirect) {\n    return <Redirect to=\"/dashboard\" />;\n  } else if (redirectEdit) {\n    return <Redirect to={`/editQuiz/${quizId}`} />;\n  } else {\n    return (\n      <Container className=\"create-quiz-page\">\n        <div className=\"create-form\">\n          <Typography variant=\"h4\" className=\"create-head\">\n            Quiz Details\n          </Typography>\n          <div className=\"create-form-inputs\">\n            <TextInput\n              variant=\"outlined\"\n              label=\"Quiz Name\"\n              value={quizName}\n              onChange={onQuizNameChange}\n              name=\"Quiz Name\"\n              className=\"form-input\"\n            />\n\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <Grid className=\"date-time-select\" container spacing={3}>\n                <Grid item xs={12} sm={6}>\n                  <KeyboardDatePicker\n                    disableToolbar\n                    variant=\"inline\"\n                    format=\"MM/dd/yyyy\"\n                    margin=\"normal\"\n                    label=\"Select Quiz Date\"\n                    value={quizDate}\n                    onChange={handleDateChange}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <KeyboardTimePicker\n                    ampm={true}\n                    format=\"hh:mm:ss aa\"\n                    views={['hours', 'minutes', 'seconds']}\n                    margin=\"normal\"\n                    label=\"Select Quiz Start Time\"\n                    value={quizDate}\n                    onChange={handleDateChange}\n                    keyboardIcon={<AccessAlarm />}\n                  />\n                </Grid>\n              </Grid>\n            </MuiPickersUtilsProvider>\n            <p style={{ marginTop: '5%', marginBottom: '5%' }}>\n              Quiz Time (in minutes):\n            </p>\n            <Slider\n              defaultValue={5}\n              aria-labelledby=\"quiz time slider\"\n              step={5}\n              min={5}\n              max={60}\n              valueLabelDisplay=\"on\"\n              marks\n              className=\"time-slider\"\n              value={duration}\n              onChange={handleTimeChange}\n            />\n            <p>Select quiz type: </p>\n            <Select\n              value={type}\n              onChange={onTypeChange}\n              className=\"type-select\"\n            >\n              <MenuItem value=\"public\">Public</MenuItem>\n              <MenuItem value=\"private\">Private</MenuItem>\n            </Select>\n\n            <Button className=\"login-btn create-btn\" onClick={handleSubmit}>\n              Create Quiz\n            </Button>\n            <Typography variant=\"subtitle1\" className=\"create-subtitle\">\n              NOTE: After creating the quiz, you can add questions by editing\n              the quiz in YOUR QUIZZES section of the dashboard.\n            </Typography>\n          </div>\n        </div>\n        <Snackbar\n          open={error}\n          autoHideDuration={5000}\n          onClose={() => setError(false)}\n        >\n          <Alert\n            variant=\"filled\"\n            severity=\"error\"\n            onClose={() => setError(false)}\n          >\n            There was a problem. Please try again!\n          </Alert>\n        </Snackbar>\n      </Container>\n    );\n  }\n}\n\nexport default CreateQuiz;\n","import React, { useEffect, useState } from 'react';\nimport './EditQuiz.css';\nimport {\n  Container,\n  Typography,\n  Button,\n  Dialog,\n  Grid,\n  InputLabel,\n  Select,\n  MenuItem,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  FormControlLabel,\n  IconButton,\n  DialogTitle,\n  Input,\n  TextField,\n  Divider,\n  Popover,\n  Snackbar,\n} from '@material-ui/core';\nimport {\n  Create,\n  ExpandMore,\n  Adjust,\n  Delete,\n  BarChart,\n  Replay,\n  AddCircle,\n  Info,\n} from '@material-ui/icons';\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport Loading from './Loading';\nimport TextInput from '../components/TextInput';\nimport Dropzone from 'react-dropzone';\nimport csv from 'csv';\nimport { Alert } from '@material-ui/lab';\nimport { useGoogleReCaptcha } from 'react-google-recaptcha-v3';\n\nfunction EditQuiz(props) {\n  const quizId = props.match.params.id;\n\n  const [loading, setLoading] = useState(true);\n  const [redirect, setRedirect] = useState(false);\n\n  const [quizDetails, setQuizDetails] = useState({});\n  const [quizQuestions, setQuizQuestions] = useState([]);\n\n  const [fileError, setFileError] = useState(false);\n  const [serverError, setServerError] = useState(false);\n  const [popoverAnchor, setPopoverAnchor] = useState(null);\n  const popoverOpen = Boolean(popoverAnchor);\n\n  const [questionModal, setQuestionModal] = useState(false);\n  const [newQuestion, setNewQuestion] = useState('');\n  const [newQuestionError, setNewQuestionError] = useState(false);\n\n  const [option1, setOption1] = useState('');\n  const [option1Error, setOption1Error] = useState(false);\n  const [option2, setOption2] = useState('');\n  const [option2Error, setOption2Error] = useState(false);\n  const [option3, setOption3] = useState('');\n  const [option3Error, setOption3Error] = useState(false);\n  const [option4, setOption4] = useState('');\n  const [option4Error, setOption4Error] = useState(false);\n  const [correctOption, setCorrectOption] = useState(-1);\n  const [correctOptionError, setCorrectOptionError] = useState(false);\n\n  const [update, setUpdate] = useState(false);\n  const [updateId, setUpdateId] = useState(null);\n\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [deleteQuestionModal, setDeleteQuestionModal] = useState(false);\n\n  const [quizRestartModal, setQuizRestartModal] = useState(false);\n  const [closeQuizModal, setCloseQuizModal] = useState(false);\n\n  const [responses, setResponses] = useState([]);\n\n  const [searchData, setSearchData] = useState(responses);\n  const [searchText, setSearchText] = useState('');\n  const [sortBy, setSortBy] = useState(-1);\n\n  const { executeRecaptcha } = useGoogleReCaptcha();\n\n  const onCloseHandle = () => {\n    setQuestionModal(false);\n    if (update) {\n      setUpdate(false);\n      setUpdateId(null);\n      clearModal();\n    }\n  };\n\n  const handlePopover = (event) => {\n    setPopoverAnchor(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setPopoverAnchor(null);\n  };\n\n  const onQuestionChange = (event) => {\n    setNewQuestion(event.target.value);\n  };\n\n  const handleOptionChange1 = (event) => {\n    setOption1(event.target.value);\n  };\n  const handleOptionChange2 = (event) => {\n    setOption2(event.target.value);\n  };\n  const handleOptionChange3 = (event) => {\n    setOption3(event.target.value);\n  };\n  const handleOptionChange4 = (event) => {\n    setOption4(event.target.value);\n  };\n\n  const handleCorrectOption = (event) => {\n    setCorrectOption(event.target.value);\n  };\n\n  const clearModal = () => {\n    setNewQuestion('');\n    setNewQuestionError(false);\n    setOption1('');\n    setOption1Error(false);\n    setOption2('');\n    setOption2Error(false);\n    setOption3('');\n    setOption3Error(false);\n    setOption4('');\n    setOption4Error(false);\n    setCorrectOption(-1);\n    setCorrectOptionError(false);\n  };\n\n  const handleFileDrop = (files) => {\n    const reader = new FileReader();\n\n    let questions = [];\n\n    reader.onabort = () => {\n      setFileError(true);\n      return;\n    };\n    reader.onerror = () => {\n      setFileError(true);\n      return;\n    };\n\n    reader.onload = () => {\n      csv.parse(reader.result, (err, data) => {\n        if (data === undefined) {\n          setFileError(true);\n          return;\n        }\n        data.map((question) => {\n          if (question[0].trim() === '') {\n            return null;\n          }\n          let obj = {\n            quizId: quizId,\n            description: question[0],\n            options: [\n              { text: question[1] },\n              { text: question[2] },\n              { text: question[3] },\n              { text: question[4] },\n            ],\n            correctAnswer: question[5],\n          };\n\n          questions.push(obj);\n        });\n        submitCSV(questions);\n      });\n    };\n\n    reader.readAsBinaryString(files[0]);\n  };\n\n  const submitCSV = async (questions) => {\n    setLoading(true);\n    let token = localStorage.getItem('authToken');\n    let url = 'http://psmcq.online/question/csv';\n\n    let captcha = await executeRecaptcha('submit_csv');\n\n    let data = {\n      questions: questions,\n      captcha: captcha,\n    };\n\n    try {\n      await axios\n        .post(url, data, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          console.log(res);\n          setLoading(false);\n          clearModal();\n          onCloseHandle();\n          getQuizDetails();\n        });\n    } catch (error) {\n      setServerError(true);\n      console.log(error);\n    }\n  };\n\n  const handleSearchChange = (event) => {\n    setSearchText(event.target.value);\n\n    let newRes = responses.filter(\n      (response) =>\n        response.userId.name\n          .toLowerCase()\n          .search(event.target.value.trim().toLowerCase()) !== -1 ||\n        String(response.marks) === event.target.value.trim().toLowerCase()\n    );\n    let sorted = sortByFunc(sortBy, newRes);\n\n    setSearchData(sorted);\n  };\n\n  const handleSortChange = (event) => {\n    setSortBy(event.target.value);\n\n    let newRes = sortByFunc(event.target.value, searchData);\n\n    setSearchData(newRes);\n  };\n\n  const sortByFunc = (by, array) => {\n    if (by === 'score') {\n      return array.sort(function (a, b) {\n        return b.marks - a.marks;\n      });\n    } else if (by === 'name') {\n      return array.sort(function (a, b) {\n        return a.userId.name - b.userId.name;\n      });\n    } else if (by === 'recent') {\n      return array.sort(function (a, b) {\n        return b.timeEnded - a.timeEnded;\n      });\n    } else {\n      return array;\n    }\n  };\n\n  const handleRestart = async () => {\n    let token = localStorage.getItem('authToken');\n    let url = `http://psmcq.online/quiz/restart`;\n\n    let captcha = await executeRecaptcha('restart_quiz');\n\n    let data = {\n      quizId: quizId,\n      captcha: captcha,\n    };\n\n    try {\n      await axios\n        .patch(url, data, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          setQuizRestartModal(false);\n          getQuizDetails();\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleQuizClose = async () => {\n    let token = localStorage.getItem('authToken');\n    let url = `http://psmcq.online/quiz/close`;\n\n    let captcha = await executeRecaptcha('quiz_close');\n\n    let data = {\n      quizId: quizId,\n      captcha: captcha,\n    };\n\n    try {\n      await axios\n        .patch(url, data, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          setCloseQuizModal(false);\n          getQuizDetails();\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleQuestionEditBtn = (question) => {\n    setUpdate(true);\n    setUpdateId(question._id);\n    setNewQuestion(question.description);\n    setOption1(question.options[0].text);\n    setOption2(question.options[1].text);\n    setOption3(question.options[2].text);\n    setOption4(question.options[3].text);\n    setCorrectOption(question.correctAnswer);\n    setQuestionModal(true);\n  };\n\n  const handleQuestionDeleteBtn = (question) => {\n    setUpdateId(question._id);\n    setDeleteQuestionModal(true);\n  };\n\n  const handleQuestionModalClose = () => {\n    setUpdateId(null);\n    setDeleteQuestionModal(false);\n  };\n\n  const handleDeleteBtn = () => {\n    setDeleteModal(true);\n  };\n\n  const handleDeleteQuestion = async () => {\n    let token = localStorage.getItem('authToken');\n    let url = `http://psmcq.online/${updateId}`;\n\n    // let captcha = executeRecaptcha(\"delete_quiz\");\n\n    try {\n      await axios\n        .delete(url, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          setUpdateId(null);\n          setDeleteQuestionModal(false);\n          getQuizDetails();\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleDelete = async () => {\n    let token = localStorage.getItem('authToken');\n    let url = `http://psmcq.online/quiz/delete`;\n\n    let data = {\n      quizId: quizId,\n    };\n\n    try {\n      await axios\n        .delete(url, {\n          headers: {\n            'auth-token': token,\n          },\n          data: data,\n        })\n        .then((res) => {\n          setRedirect(true);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleQuestionUpdate = async () => {\n    if (!validate()) return;\n\n    let token = localStorage.getItem('authToken');\n    let url = `http://psmcq.online/question/update/${updateId}`;\n\n    let captcha = await executeRecaptcha('question_update');\n\n    let updateOps = [\n      { propName: 'description', value: newQuestion },\n      {\n        propName: 'options',\n        value: [\n          {\n            text: option1,\n          },\n          {\n            text: option2,\n          },\n          {\n            text: option3,\n          },\n          {\n            text: option4,\n          },\n        ],\n      },\n      { propName: 'correctAnswer', value: correctOption },\n    ];\n\n    let data = {\n      updateOps: updateOps,\n      captcha: captcha,\n    };\n\n    try {\n      await axios\n        .patch(url, data, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          onCloseHandle();\n          getQuizDetails();\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const validate = () => {\n    if (newQuestion.trim().length === 0) {\n      setNewQuestionError(true);\n      return false;\n    }\n\n    if (option1.trim().length === 0) {\n      setOption1Error(true);\n      return false;\n    }\n    if (option2.trim().length === 0) {\n      setOption2Error(true);\n      return false;\n    }\n    if (option3.trim().length === 0) {\n      setOption3Error(true);\n      return false;\n    }\n    if (option4.trim().length === 0) {\n      setOption4Error(true);\n      return false;\n    }\n\n    if (correctOption === -1) {\n      setCorrectOptionError(true);\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleQuestionSubmit = async () => {\n    //TODO: Handle Validation\n\n    if (!validate()) return;\n\n    let token = localStorage.getItem('authToken');\n    let url = `http://psmcq.online/question/add`;\n\n    let captcha = await executeRecaptcha('submit_question');\n\n    let options = [\n      { text: option1 },\n      { text: option2 },\n      { text: option3 },\n      { text: option4 },\n    ];\n\n    let data = {\n      quizId: quizId,\n      description: newQuestion,\n      options: options,\n      correctAnswer: correctOption,\n      captcha: captcha,\n    };\n\n    try {\n      await axios\n        .post(url, data, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          clearModal();\n          getQuizDetails();\n          setQuestionModal(false);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const isOwnerOfQuiz = async () => {\n    let token = localStorage.getItem('authToken');\n    let url = `http://psmcq.online/quiz/checkAdmin/${quizId}`;\n\n    try {\n      await axios\n        .get(url, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          return true;\n        });\n    } catch (error) {\n      setRedirect(true);\n      return;\n    }\n  };\n\n  const getQuizDetails = async () => {\n    setLoading(true);\n    let token = localStorage.getItem('authToken');\n    let url = `http://psmcq.online/quiz/${quizId}`;\n\n    try {\n      await axios\n        .get(url, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          setQuizDetails(res.data.result);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n\n    url = `http://psmcq.online/question/all/${quizId}`;\n\n    try {\n      await axios\n        .get(url, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          setQuizQuestions(res.data.result);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n\n    url = `http://psmcq.online/admin/allStudentsQuizResult/${quizId}`;\n\n    try {\n      await axios\n        .get(url, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          setResponses(res.data.userResults);\n          setSearchData(res.data.userResults);\n          setLoading(false);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    let token = localStorage.getItem('authToken');\n    if (token === null) {\n      setLoading(false);\n      setRedirect(true);\n      return;\n    }\n\n    isOwnerOfQuiz();\n    getQuizDetails();\n  }, []);\n\n  if (loading) {\n    return <Loading />;\n  } else if (redirect) {\n    return <Redirect to=\"/dashboard\" />;\n  } else {\n    return (\n      <Container className=\"edit-quiz-page\">\n        <Typography variant=\"h3\" className=\"dash-head p-top edit-quiz-head\">\n          Edit Quiz\n        </Typography>\n        <div className=\"edit-btn-bar\">\n          <Button\n            className=\"edit-details-btn\"\n            component={Link}\n            to={`/updateQuizDetails/${quizId}`}\n          >\n            <Create className=\"edit-icon\" />\n            Edit Details\n          </Button>\n          <Button\n            className=\"edit-details-btn delete-btn\"\n            onClick={handleDeleteBtn}\n          >\n            <Delete className=\"edit-icon\" />\n            Delete Quiz\n          </Button>\n          {quizDetails.quizStatus === 1 ? (\n            <Button\n              className=\"edit-details-btn\"\n              style={{ marginLeft: '3%' }}\n              onClick={() => setCloseQuizModal(true)}\n            >\n              <Replay className=\"edit-quiz\" />\n              Close Quiz\n            </Button>\n          ) : quizDetails.quizStatus === 2 ? (\n            <Button\n              className=\"edit-details-btn\"\n              style={{ marginLeft: '3%' }}\n              onClick={() => setQuizRestartModal(true)}\n            >\n              <Replay className=\"edit-quiz\" />\n              Restart Quiz\n            </Button>\n          ) : null}\n        </div>\n        <div className=\"quiz-details-sec\">\n          <Typography variant=\"h6\" className=\"quiz-detail-param\">\n            Name:{' '}\n            <span className=\"quiz-detail-text\">{quizDetails.quizName}</span>\n          </Typography>\n          <Typography variant=\"h6\" className=\"quiz-detail-param\">\n            Date:{' '}\n            <span className=\"quiz-detail-text\">\n              {new Date(Number(quizDetails.scheduledFor)).toDateString()}\n            </span>\n          </Typography>\n          <Typography variant=\"h6\" className=\"quiz-detail-param\">\n            Time:{' '}\n            <span className=\"quiz-detail-text\">\n              {new Date(Number(quizDetails.scheduledFor)).toLocaleTimeString()}\n            </span>\n          </Typography>\n          <Typography variant=\"h6\" className=\"quiz-detail-param\">\n            Duration:{' '}\n            <span className=\"quiz-detail-text\">\n              {quizDetails.quizDuration} minutes\n            </span>\n          </Typography>\n          <Typography variant=\"h6\" className=\"quiz-detail-param\">\n            Type:{' '}\n            <span className=\"quiz-detail-text\">{quizDetails.quizType}</span>\n          </Typography>\n          {quizDetails.quizType === 'private' ? (\n            <Typography variant=\"h6\" className=\"quiz-detail-param\">\n              Quiz Code:{' '}\n              <span className=\"quiz-detail-text\">{quizDetails.quizCode}</span>\n            </Typography>\n          ) : null}\n        </div>\n        <div className=\"quiz-questions-sec\">\n          <Typography variant=\"h4\" className=\"quiz-questions-head\">\n            Questions\n          </Typography>\n          <div className=\"quiz-questions-display\">\n            <div className=\"add-question-bar\">\n              <Button\n                className=\"add-question-btn\"\n                onClick={() => setQuestionModal(true)}\n              >\n                Add a question\n              </Button>\n            </div>\n            {quizQuestions.length === 0 ? (\n              <p style={{ textAlign: 'center' }}>No questions added yet!</p>\n            ) : (\n              <div className=\"questions-list-display\">\n                {quizQuestions.map((question) => (\n                  <ExpansionPanel\n                    elevation={3}\n                    className=\"expansion\"\n                    key={question._id}\n                  >\n                    <ExpansionPanelSummary\n                      className=\"question-summary\"\n                      expandIcon={<ExpandMore />}\n                      aria-controls=\"question-content\"\n                      aria-label=\"Expand\"\n                    >\n                      <FormControlLabel\n                        style={{ marginRight: '0' }}\n                        aria-label=\"Edit\"\n                        control={\n                          <IconButton>\n                            <Create />\n                          </IconButton>\n                        }\n                        // label={question.description}\n                        onClick={() => handleQuestionEditBtn(question)}\n                      />\n                      <FormControlLabel\n                        aria-label=\"Edit\"\n                        control={\n                          <IconButton>\n                            <Delete />\n                          </IconButton>\n                        }\n                        // label={question.description}\n                        onClick={() => handleQuestionDeleteBtn(question)}\n                      />\n                      <Typography className=\"question-label\">\n                        {question.description}\n                      </Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                      <List component=\"nav\" className=\"options-display\">\n                        {question.options.map((option) => (\n                          <ListItem button key={option._id}>\n                            <ListItemIcon>\n                              <Adjust\n                                style={{\n                                  color:\n                                    question.correctAnswer === option.text\n                                      ? 'green'\n                                      : 'black',\n                                }}\n                              />\n                            </ListItemIcon>\n                            <ListItemText\n                              style={{\n                                color:\n                                  question.correctAnswer === option.text\n                                    ? 'green'\n                                    : 'black',\n                              }}\n                              primary={option.text}\n                            />\n                          </ListItem>\n                        ))}\n                      </List>\n                    </ExpansionPanelDetails>\n                  </ExpansionPanel>\n                ))}\n              </div>\n            )}\n          </div>\n          <Typography variant=\"h4\" className=\"quiz-questions-head m-top\">\n            Submissions\n          </Typography>\n          <div className=\"quiz-students-list\">\n            <div className=\"add-question-bar\">\n              <Button\n                className=\"add-question-btn stats-btn\"\n                component={responses.length !== 0 ? Link : Button}\n                to={{\n                  pathname: '/quizStats',\n                  state: { responses: responses },\n                }}\n              >\n                <BarChart />\n                View Stats\n              </Button>\n            </div>\n            {responses.length === 0 ? (\n              <p\n                style={{\n                  textAlign: 'center',\n                  margin: '0',\n                  paddingTop: '3%',\n                  paddingBottom: '3%',\n                }}\n              >\n                No responses yet!\n              </p>\n            ) : (\n              <>\n                <div className=\"search-bar\">\n                  <TextField\n                    placeholder=\"Search by name or score\"\n                    type=\"text\"\n                    onChange={handleSearchChange}\n                    className=\"search-input\"\n                    value={searchText}\n                  />\n                  <div style={{ marginLeft: '3%' }}>\n                    <InputLabel id=\"sort-by\">Sort by</InputLabel>\n                    <Select\n                      labelId=\"sort-by\"\n                      id=\"sort-select\"\n                      value={sortBy}\n                      onChange={handleSortChange}\n                    >\n                      <MenuItem value={-1}>\n                        <em>None</em>\n                      </MenuItem>\n                      <MenuItem value=\"recent\">Recent</MenuItem>\n                      <MenuItem value=\"score\">Score</MenuItem>\n                      <MenuItem value=\"name\">Name</MenuItem>\n                    </Select>\n                  </div>\n                </div>\n                <List aria-label=\"responses list\">\n                  {searchData.map((response) => (\n                    <ListItem\n                      button\n                      key={response._id}\n                      component={Link}\n                      to={{\n                        pathname: `/studentResponse`,\n                        state: { response: response },\n                      }}\n                    >\n                      <ListItemText\n                        primary={response.userId.name}\n                        secondary={`Scored: ${response.marks}`}\n                      />\n                    </ListItem>\n                  ))}\n                </List>\n              </>\n            )}\n          </div>\n        </div>\n        <Dialog\n          open={questionModal}\n          onClose={onCloseHandle}\n          aria-labelledby=\"add-question-modal\"\n          PaperProps={{\n            style: {\n              backgroundColor: 'white',\n              color: '#333',\n              minWidth: '50%',\n            },\n          }}\n          style={{ width: '100%' }}\n        >\n          <div className=\"add-ques-heading\">\n            <Typography\n              variant=\"h6\"\n              style={{ textAlign: 'center', margin: '2% 5%' }}\n            >\n              New Question{' '}\n            </Typography>\n            {!update ? (\n              <IconButton onClick={handlePopover}>\n                <Info className=\"add-info-icon\" />\n              </IconButton>\n            ) : null}\n            <Popover\n              id=\"file-upload-popover\"\n              open={popoverOpen}\n              anchorEl={popoverAnchor}\n              onClose={handlePopoverClose}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              disableRestoreFocus\n              useLayerForClickAway={false}\n              PaperProps={{ style: { maxWidth: '400px' } }}\n            >\n              <p className=\"popover-text\">\n                You can upload a <strong>.csv</strong> file with questions. The\n                format should be: the{' '}\n                <strong>first column should contain the question text.</strong>{' '}\n                The next 4 columns must contain the{' '}\n                <strong>four options.</strong> And the sixth column should\n                contain{' '}\n                <strong>\n                  the correct answer (it should match one of the four options)\n                </strong>\n                . <br />\n                <br />\n                <strong>\n                  NOTE: THE FILE SHOULD EXACTLY MATCH THE GIVEN FORMAT.\n                </strong>{' '}\n                You will be able to see and edit all the question though.\n              </p>\n            </Popover>\n          </div>\n          {!update ? (\n            <>\n              <div className=\"dropzone\">\n                <Dropzone\n                  onDrop={(acceptedFiles) => handleFileDrop(acceptedFiles)}\n                >\n                  {({ getRootProps, getInputProps }) => (\n                    <section>\n                      <div {...getRootProps()}>\n                        <input {...getInputProps()} />\n                        <AddCircle className=\"drop-icon\" />\n                        <p\n                          style={{\n                            color: 'rgb(110, 110, 110)',\n                          }}\n                        >\n                          Drag 'n' drop or click to select files\n                        </p>\n                      </div>\n                    </section>\n                  )}\n                </Dropzone>\n              </div>\n              <p className=\"manual-head\">\n                <span>Or manually add the question</span>\n              </p>\n            </>\n          ) : null}\n          <div className=\"new-question-form\">\n            <TextInput\n              error={newQuestionError}\n              helperText={newQuestionError ? 'This cannot be empty' : null}\n              className=\"new-ques-input\"\n              variant=\"outlined\"\n              label=\"Question Text\"\n              value={newQuestion}\n              onChange={onQuestionChange}\n            />\n            <hr style={{ width: '100%', marginBottom: '3%' }} />\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={6}>\n                <TextInput\n                  error={option1Error}\n                  helperText={option1Error ? 'This cannot be empty' : null}\n                  className=\"new-ques-input\"\n                  variant=\"outlined\"\n                  label=\"Option 1\"\n                  value={option1}\n                  onChange={handleOptionChange1}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextInput\n                  error={option2Error}\n                  helperText={option2Error ? 'This cannot be empty' : null}\n                  className=\"new-ques-input\"\n                  variant=\"outlined\"\n                  label=\"Option 2\"\n                  value={option2}\n                  onChange={handleOptionChange2}\n                />\n              </Grid>\n            </Grid>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={6}>\n                <TextInput\n                  error={option3Error}\n                  helperText={option3Error ? 'This cannot be empty' : null}\n                  className=\"new-ques-input\"\n                  variant=\"outlined\"\n                  label=\"Option 3\"\n                  value={option3}\n                  onChange={handleOptionChange3}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextInput\n                  error={option4Error}\n                  helperText={option4Error ? 'This cannot be empty' : null}\n                  className=\"new-ques-input\"\n                  variant=\"outlined\"\n                  label=\"Option 4\"\n                  value={option4}\n                  onChange={handleOptionChange4}\n                />\n              </Grid>\n            </Grid>\n            <hr style={{ width: '100%', marginBottom: '3%' }} />\n            <InputLabel id=\"correct-option\">Correct Option</InputLabel>\n            <Select\n              error={correctOptionError}\n              className=\"correct-answer-select\"\n              style={{ width: '50%' }}\n              labelId=\"correct-option\"\n              value={correctOption}\n              onChange={handleCorrectOption}\n            >\n              <MenuItem value={-1}>None</MenuItem>\n              {option1.trim().length !== 0 ? (\n                <MenuItem value={option1}>{option1}</MenuItem>\n              ) : null}\n              {option2.trim().length !== 0 ? (\n                <MenuItem value={option2}>{option2}</MenuItem>\n              ) : null}\n              {option3.trim().length !== 0 ? (\n                <MenuItem value={option3}>{option3}</MenuItem>\n              ) : null}\n              {option4.trim().length !== 0 ? (\n                <MenuItem value={option4}>{option4}</MenuItem>\n              ) : null}\n            </Select>\n            {!update ? (\n              <Button\n                className=\"add-question-submit\"\n                onClick={handleQuestionSubmit}\n              >\n                Add Question\n              </Button>\n            ) : (\n              <Button\n                className=\"add-question-submit\"\n                onClick={handleQuestionUpdate}\n              >\n                Update Question\n              </Button>\n            )}\n          </div>\n        </Dialog>\n        <Dialog\n          open={deleteModal}\n          onClose={() => setDeleteModal(false)}\n          aria-labelledby=\"delete-quiz-modal\"\n          PaperProps={{\n            style: {\n              backgroundColor: 'white',\n              color: 'black',\n              minWidth: '10%',\n            },\n          }}\n        >\n          <DialogTitle>Are you sure you want to delete this quiz?</DialogTitle>\n          <div className=\"btn-div\">\n            <Button\n              className=\"logout-btn m-right bg-red-btn\"\n              onClick={handleDelete}\n            >\n              Yes\n            </Button>\n            <Button\n              className=\"cancel-btn m-left\"\n              onClick={() => setDeleteModal(false)}\n            >\n              No\n            </Button>\n          </div>\n        </Dialog>\n        <Dialog\n          open={deleteQuestionModal}\n          onClose={handleQuestionModalClose}\n          aria-labelledby=\"delete-quiz-modal\"\n          PaperProps={{\n            style: {\n              backgroundColor: 'white',\n              color: 'black',\n              minWidth: '10%',\n            },\n          }}\n        >\n          <DialogTitle>\n            Are you sure you want to delete this question?\n          </DialogTitle>\n          <div className=\"btn-div\">\n            <Button\n              className=\"logout-btn m-right bg-red-btn\"\n              onClick={handleDeleteQuestion}\n            >\n              Yes\n            </Button>\n            <Button\n              className=\"cancel-btn m-left\"\n              onClick={handleQuestionModalClose}\n            >\n              No\n            </Button>\n          </div>\n        </Dialog>\n        <Dialog\n          open={quizRestartModal}\n          onClose={() => setQuizRestartModal(false)}\n          aria-labelledby=\"restart-quiz-modal\"\n          PaperProps={{\n            style: {\n              backgroundColor: 'white',\n              color: 'black',\n              minWidth: '10%',\n            },\n          }}\n        >\n          <DialogTitle>Are you sure you want to restart this quiz?</DialogTitle>\n          <div className=\"btn-div\">\n            <Button\n              className=\"logout-btn m-right bg-green-btn\"\n              onClick={handleRestart}\n            >\n              Yes\n            </Button>\n            <Button\n              className=\"cancel-btn m-left bg-red-btn\"\n              onClick={() => setQuizRestartModal(false)}\n            >\n              No\n            </Button>\n          </div>\n        </Dialog>\n        <Dialog\n          open={closeQuizModal}\n          onClose={() => setCloseQuizModal(false)}\n          aria-labelledby=\"restart-quiz-modal\"\n          PaperProps={{\n            style: {\n              backgroundColor: 'white',\n              color: 'black',\n              minWidth: '10%',\n            },\n          }}\n        >\n          <DialogTitle>Are you sure you want to close this quiz?</DialogTitle>\n          <div className=\"btn-div\">\n            <Button\n              className=\"logout-btn m-right bg-green-btn\"\n              onClick={handleQuizClose}\n            >\n              Yes\n            </Button>\n            <Button\n              className=\"cancel-btn m-left bg-red-btn\"\n              onClick={() => setCloseQuizModal(false)}\n            >\n              No\n            </Button>\n          </div>\n        </Dialog>\n        <Snackbar\n          open={fileError}\n          autoHideDuration={3000}\n          onClose={() => setFileError(false)}\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n        >\n          <Alert\n            variant=\"filled\"\n            severity=\"error\"\n            onClose={() => setFileError(false)}\n          >\n            There was some problem with the file. Try again...\n          </Alert>\n        </Snackbar>\n        <Snackbar\n          open={serverError}\n          autoHideDuration={3000}\n          onClose={() => setServerError(false)}\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n        >\n          <Alert\n            variant=\"filled\"\n            severity=\"error\"\n            onClose={() => setServerError(false)}\n          >\n            There was some problem with the server. Try again...\n          </Alert>\n        </Snackbar>\n      </Container>\n    );\n  }\n}\n\nexport default EditQuiz;\n","/* Copy of createQuiz page */\nimport React, { useState, useEffect } from 'react';\nimport './CreateQuiz.css';\nimport {\n  Container,\n  Typography,\n  Grid,\n  Slider,\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n  Tooltip,\n} from '@material-ui/core';\nimport TextInput from '../components/TextInput';\nimport {\n  KeyboardDatePicker,\n  KeyboardTimePicker,\n  MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport axios from 'axios';\nimport { Redirect } from 'react-router';\nimport Loading from '../pages/Loading';\nimport { useGoogleReCaptcha } from 'react-google-recaptcha-v3';\n\nfunction UpdateQuizDetails(props) {\n  const [quizId, setQuizId] = useState(props.match.params.id);\n  const [quizName, setQuizName] = useState('');\n  const [quizDate, setQuizDate] = useState(new Date());\n  const [duration, setDuration] = useState(5);\n  const [type, setType] = useState('private');\n\n  const [loading, setLoading] = useState(true);\n  const [redirect, setRedirect] = useState(false);\n\n  const { executeRecaptcha } = useGoogleReCaptcha();\n\n  const onQuizNameChange = (event) => {\n    setQuizName(event.target.value);\n  };\n\n  const handleDateChange = (date) => {\n    setQuizDate(date);\n  };\n\n  const handleTimeChange = (e, val) => {\n    setDuration(val);\n  };\n\n  const onTypeChange = (event) => {\n    setType(event.target.value);\n  };\n\n  const handleSubmit = async () => {\n    setLoading(true);\n    let token = localStorage.getItem('authToken');\n    let url = `http://psmcq.online/quiz/updateDetails/${quizId}`;\n\n    let captcha = await executeRecaptcha('update_quiz_details');\n\n    let updateOps = [\n      { propName: 'quizName', value: quizName },\n      { propName: 'scheduledFor', value: quizDate.getTime() },\n      { propName: 'quizDuration', value: duration },\n    ];\n\n    let data = {\n      updateOps,\n      captcha,\n    };\n\n    try {\n      await axios\n        .patch(url, data, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          setLoading(false);\n          setRedirect(true);\n        });\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const getQuizDetails = async () => {\n    setLoading(true);\n    let token = localStorage.getItem('authToken');\n    let url = `http://psmcq.online/quiz/${quizId}`;\n\n    try {\n      await axios\n        .get(url, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          let details = res.data.result;\n          setQuizName(details.quizName);\n          setQuizDate(new Date(Number(details.scheduledFor)));\n          setDuration(details.quizDuration);\n          setType(details.quizType);\n          setLoading(false);\n        });\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getQuizDetails();\n  }, []);\n\n  useEffect(() => {\n    let token = localStorage.getItem('authToken');\n    if (token === null) {\n      setLoading(false);\n      setRedirect(true);\n      return;\n    }\n  }, []);\n\n  if (loading) {\n    return <Loading />;\n  } else if (redirect) {\n    return <Redirect to={`/editQuiz/${quizId}`} />;\n  } else {\n    return (\n      <Container className=\"create-quiz-page\">\n        <div className=\"create-form\">\n          <Typography variant=\"h4\" className=\"create-head\">\n            Quiz Details\n          </Typography>\n          <div className=\"create-form-inputs\">\n            <TextInput\n              variant=\"outlined\"\n              label=\"Quiz Name\"\n              value={quizName}\n              onChange={onQuizNameChange}\n              name=\"Quiz Name\"\n              className=\"form-input\"\n            />\n\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <Grid className=\"date-time-select\" container spacing={3}>\n                <Grid item xs={12} sm={6}>\n                  <KeyboardDatePicker\n                    disableToolbar\n                    variant=\"inline\"\n                    format=\"MM/dd/yyyy\"\n                    margin=\"normal\"\n                    label=\"Select Quiz Date\"\n                    value={quizDate}\n                    onChange={handleDateChange}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <KeyboardTimePicker\n                    margin=\"normal\"\n                    label=\"Select Quiz Start Time\"\n                    value={quizDate}\n                    onChange={handleDateChange}\n                  />\n                </Grid>\n              </Grid>\n            </MuiPickersUtilsProvider>\n            <p style={{ marginTop: '5%', marginBottom: '5%' }}>\n              Quiz Time (in minutes):\n            </p>\n            <Slider\n              defaultValue={5}\n              aria-labelledby=\"quiz time slider\"\n              step={5}\n              min={5}\n              max={60}\n              valueLabelDisplay=\"on\"\n              marks\n              className=\"time-slider\"\n              value={duration}\n              onChange={handleTimeChange}\n            />\n            <p style={{ color: '#777' }}>Select quiz type: </p>\n            <Tooltip title=\"Cannot change quiz type\">\n              <Select\n                disabled\n                value={type}\n                onChange={onTypeChange}\n                className=\"type-select\"\n              >\n                <MenuItem value=\"public\">Public</MenuItem>\n                <MenuItem value=\"private\">Private</MenuItem>\n              </Select>\n            </Tooltip>\n\n            <Button className=\"login-btn create-btn\" onClick={handleSubmit}>\n              Update Quiz\n            </Button>\n          </div>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default UpdateQuizDetails;\n","import React, { useState, useEffect } from 'react';\nimport './LoginPage.css';\nimport { Container, Typography, Button } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { Redirect } from 'react-router-dom';\nimport TextInput from '../components/TextInput';\nimport axios from 'axios';\nimport Loading from './Loading';\nimport { useGoogleReCaptcha } from 'react-google-recaptcha-v3';\n\nfunction UpdateProfile(props) {\n  const [name, setName] = useState('');\n  const [nameError, setNameError] = useState(false);\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [numberError, setNumberError] = useState(false);\n\n  const [loading, setLoading] = useState(true);\n  const [type, setType] = useState(props.match.params.type);\n\n  const [redirect, setRedirect] = useState(false);\n  const [error, setError] = useState(false);\n\n  const { executeRecaptcha } = useGoogleReCaptcha();\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handlePhoneNumberChange = (event) => {\n    setPhoneNumber(event.target.value);\n  };\n\n  const keyPress = (event) => {\n    if (event.key === 'Enter') {\n      handleSubmit();\n    }\n  };\n\n  const handleSubmit = async () => {\n    let token = localStorage.getItem('authToken');\n    let url = `http://psmcq.online/${type}/updateProfile`;\n\n    let captcha = await executeRecaptcha('update_profile');\n\n    if (name.trim().length === 0) {\n      setNameError(true);\n      return;\n    } else setNameError(false);\n\n    if (phoneNumber.trim().length !== 10) {\n      setNumberError(true);\n      return;\n    } else setNumberError(false);\n\n    setLoading(true);\n\n    let updateOps = [\n      { propName: 'name', value: name },\n      { propName: 'mobileNumber', value: phoneNumber },\n    ];\n\n    let data = {\n      updateOps,\n      captcha,\n    };\n\n    try {\n      await axios\n        .patch(url, data, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          localStorage.setItem('name', name);\n          setRedirect(true);\n          window.location.reload(true);\n        });\n    } catch (error) {\n      console.log(error);\n      setError(true);\n      setLoading(false);\n    }\n  };\n\n  const getDetails = async () => {\n    let token = localStorage.getItem('authToken');\n    let url = `http://psmcq.online/${type}`;\n\n    try {\n      await axios\n        .get(url, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          setName(res.data.result1.name);\n          if (res.data.result1.mobileNumber !== undefined)\n            setPhoneNumber(res.data.result1.mobileNumber.toString());\n          else setPhoneNumber('');\n          setLoading(false);\n        });\n    } catch (error) {\n      console.log(error);\n      setRedirect(true);\n    }\n  };\n\n  useEffect(() => {\n    getDetails();\n  }, []);\n\n  useEffect(() => {\n    let token = localStorage.getItem('authToken');\n    if (token === null) {\n      setLoading(false);\n      setRedirect(true);\n      return;\n    }\n  }, []);\n\n  if (redirect) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n  return loading ? (\n    <Loading />\n  ) : (\n    <Container className=\"login-page\">\n      <div className=\"login-form\">\n        <Typography variant=\"h3\" color=\"primary\" className=\"login-head\">\n          Update Profile\n        </Typography>\n        <br />\n        {error === true ? (\n          <Alert severity=\"error\">\n            There was some error! Please try again...\n          </Alert>\n        ) : null}\n        <form className=\"form\">\n          <TextInput\n            error={nameError}\n            helperText={nameError ? 'Name cannot be empty' : null}\n            id=\"name\"\n            label=\"Name\"\n            type=\"text\"\n            className=\"form-input\"\n            variant=\"outlined\"\n            value={name}\n            onChange={handleNameChange}\n            onKeyPress={keyPress}\n          ></TextInput>\n          <br />\n          <TextInput\n            error={numberError}\n            helperText={numberError ? 'Invalid Phone Number' : null}\n            id=\"phone-number\"\n            type=\"text\"\n            label=\"Phone Number\"\n            className=\"form-input\"\n            variant=\"outlined\"\n            value={phoneNumber}\n            onChange={handlePhoneNumberChange}\n            onKeyPress={keyPress}\n          ></TextInput>\n        </form>\n        <Button className=\"login-btn\" onClick={handleSubmit}>\n          Update\n        </Button>\n      </div>\n    </Container>\n  );\n}\n\nexport default UpdateProfile;\n","// Copy of UpdateProfile.js\nimport React, { useState, useEffect } from 'react';\nimport './LoginPage.css';\nimport { Container, Typography, Button } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { Redirect } from 'react-router-dom';\nimport TextInput from '../components/TextInput';\nimport axios from 'axios';\nimport Loading from './Loading';\nimport { useGoogleReCaptcha } from 'react-google-recaptcha-v3';\n\nfunction UpdateProfile(props) {\n  const [oldPass, setOldPass] = useState('');\n  const [oldPassError, setOldPassError] = useState(false);\n\n  const [newPass, setNewPass] = useState('');\n  const [newPassError, setNewPassError] = useState(false);\n\n  const [confirmPass, setConfirmPass] = useState('');\n  const [confirmPassError, setConfirmPassError] = useState(false);\n  const [confirmPassErrorText, setConfirmPassErrorText] = useState('');\n\n  const [loading, setLoading] = useState(false);\n  const [type, setType] = useState(props.match.params.type);\n\n  const [redirect, setRedirect] = useState(false);\n  const [error, setError] = useState(false);\n  const [errorText, setErrorText] = useState(\n    'There was some problem! Please try again...'\n  );\n\n  const { executeRecaptcha } = useGoogleReCaptcha();\n\n  const handleOldPassChange = (event) => {\n    setOldPass(event.target.value);\n  };\n  const handleNewPassChange = (event) => {\n    setNewPass(event.target.value);\n  };\n  const handleConfirmPassChange = (event) => {\n    setConfirmPass(event.target.value);\n  };\n\n  const keyPress = (event) => {\n    if (event.key === 'Enter') {\n      handleSubmit();\n    }\n  };\n\n  const validate = () => {\n    let errors = false;\n\n    if (oldPass.trim().length === 0) {\n      setOldPassError(true);\n      errors = true;\n    } else setOldPassError(false);\n\n    if (newPass.trim().length === 0) {\n      setNewPassError(true);\n      errors = true;\n    } else setNewPassError(false);\n\n    if (confirmPass.trim().length === 0) {\n      setConfirmPassError(true);\n      setConfirmPassErrorText('This cannot be empty');\n      errors = true;\n    } else if (confirmPass !== newPass) {\n      setConfirmPassErrorText('Does not match password');\n      setConfirmPassError(true);\n      errors = true;\n    } else setConfirmPassError(false);\n\n    return !errors;\n  };\n\n  const handleSubmit = async () => {\n    let token = localStorage.getItem('authToken');\n    let url = `http://psmcq.online/${type}/changePassword`;\n\n    if (token === null) {\n      setRedirect(true);\n      return;\n    }\n\n    if (!validate()) return;\n\n    setLoading(true);\n    let captcha = await executeRecaptcha('update_password');\n\n    let data = {\n      password: oldPass,\n      newPassword: newPass,\n      captcha: captcha,\n    };\n\n    try {\n      await axios\n        .patch(url, data, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          setRedirect(true);\n        });\n    } catch (error) {\n      console.log(error);\n      if (error.response.status === 401) {\n        setErrorText('Old password is wrong!');\n      } else {\n        setErrorText('There was some problem! Please try again...');\n      }\n      setError(true);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    let token = localStorage.getItem('authToken');\n    if (token === null) {\n      setRedirect(true);\n      return;\n    }\n  }, []);\n\n  if (redirect) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n  return loading ? (\n    <Loading />\n  ) : (\n    <Container className=\"login-page\">\n      <div className=\"login-form\">\n        <Typography variant=\"h3\" color=\"primary\" className=\"login-head\">\n          Update Profile\n        </Typography>\n        <br />\n        {error === true ? <Alert severity=\"error\">{errorText}</Alert> : null}\n        <form className=\"form\">\n          <TextInput\n            error={oldPassError}\n            helperText={oldPassError ? 'This cannot be empty' : null}\n            id=\"old-pass\"\n            label=\"Old Password\"\n            type=\"password\"\n            className=\"form-input\"\n            variant=\"outlined\"\n            value={oldPass}\n            onChange={handleOldPassChange}\n          ></TextInput>\n          <TextInput\n            error={newPassError}\n            helperText={newPassError ? 'This cannot be empty' : null}\n            id=\"new-pass\"\n            label=\"New Password\"\n            type=\"password\"\n            className=\"form-input\"\n            variant=\"outlined\"\n            value={newPass}\n            onChange={handleNewPassChange}\n          ></TextInput>\n          <br />\n          <TextInput\n            error={confirmPassError}\n            helperText={confirmPassError ? confirmPassErrorText : null}\n            id=\"confirm-pass\"\n            type=\"password\"\n            label=\"Confirm Password\"\n            className=\"form-input\"\n            variant=\"outlined\"\n            value={confirmPass}\n            onChange={handleConfirmPassChange}\n            onKeyPress={keyPress}\n          ></TextInput>\n        </form>\n        <Button className=\"login-btn\" onClick={handleSubmit}>\n          Update\n        </Button>\n      </div>\n    </Container>\n  );\n}\n\nexport default UpdateProfile;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './OwnerQuizzes.css';\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n} from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport QuizLoading from './QuizLoading';\nimport { ArrowForwardIos } from '@material-ui/icons';\n\nfunction OwnerQuizzes(props) {\n  const [loading, setLoading] = useState(true);\n  const [quizzes, setQuizzes] = useState([]);\n\n  const getAllQuizzes = async () => {\n    let token = localStorage.getItem('authToken');\n    let url = 'http://psmcq.online/owner/allQuizzes';\n\n    try {\n      await axios\n        .get(url, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          setQuizzes(res.data.result);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getAllQuizzes();\n  }, []);\n\n  if (loading) {\n    return <QuizLoading />;\n  }\n\n  return (\n    <div className=\"owner-quizzes\">\n      {quizzes.length === 0 ? (\n        <p>No quizzes available now!</p>\n      ) : (\n        <List aria-label=\"quiz display\" className=\"owner-quiz-list\">\n          {quizzes.map((quiz) => (\n            <ListItem\n              button\n              className=\"owner-quiz-item\"\n              component={Link}\n              to={`/ownerQuizDetails/${quiz._id}`}\n              key={quiz._id}\n            >\n              <ListItemText\n                primary={quiz.quizName}\n                secondary={`By: ${quiz.adminId.name}`}\n              />\n              <ListItemSecondaryAction>\n                <IconButton\n                  edge=\"end\"\n                  aria-label=\"details\"\n                  component={Link}\n                  to={`/ownerQuizDetails/${quiz._id}`}\n                >\n                  <ArrowForwardIos />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n      )}\n    </div>\n  );\n}\n\nexport default OwnerQuizzes;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './OwnerQuizzes.css';\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n} from '@material-ui/core';\nimport { ArrowForwardIos } from '@material-ui/icons';\n\nfunction OwnerUsers() {\n  const [users, setUsers] = useState([]);\n\n  const getUsers = async () => {\n    let token = localStorage.getItem('authToken');\n    let url = `http://psmcq.online/owner/allUsers`;\n\n    try {\n      await axios\n        .get(url, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          setUsers(res.data.result);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  return (\n    <div className=\"owner-quizzes\">\n      <List aria-label=\"users-display\" className=\"owner-quiz-list\">\n        {users.map((user) => (\n          <ListItem button key={user._id}>\n            <ListItemText primary={user.email} secondary={user.name} />\n            <ListItemSecondaryAction>\n              <IconButton edge=\"end\" aria-label=\"details\">\n                <ArrowForwardIos />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n}\n\nexport default OwnerUsers;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  List,\n} from '@material-ui/core';\nimport { ArrowForwardIos } from '@material-ui/icons';\n\nfunction OwnerUsers() {\n  const [organizers, setOrganizers] = useState([]);\n\n  const getUsers = async () => {\n    let token = localStorage.getItem('authToken');\n    let url = `http://psmcq.online/owner/allAdmins`;\n\n    try {\n      await axios\n        .get(url, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          setOrganizers(res.data.result);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  return (\n    <div className=\"owner-quizzes\">\n      <List aria-label=\"users-display\" className=\"owner-quiz-list\">\n        {organizers.map((user) => (\n          <ListItem button key={user._id}>\n            <ListItemText primary={user.email} secondary={user.name} />\n            <ListItemSecondaryAction>\n              <IconButton edge=\"end\" aria-label=\"details\">\n                <ArrowForwardIos />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n}\n\nexport default OwnerUsers;\n","import React, { useState, useContext, useEffect } from 'react';\nimport { Container, Typography, AppBar, Tabs, Tab } from '@material-ui/core';\nimport './Dashboard.css';\nimport './OwnerDashboard.css';\nimport InfoContext from '../context/InfoContext';\nimport { Redirect } from 'react-router';\nimport Loading from './Loading';\nimport axios from 'axios';\nimport '../components/ProfileSection';\nimport OwnerQuizzes from '../components/OwnerQuizzes';\nimport OwnerUsers from '../components/OwnerUsers';\nimport OwnerOrganizers from '../components/OwnerOrganizers';\n\nfunction OwnerDashboard() {\n  const [tab, setTab] = useState(0);\n  const [redirect, setRedirect] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  const [refresh, setRefresh] = useState(false);\n\n  const { isLoggedIn } = useContext(InfoContext);\n\n  const handleTabChange = (e, newVal) => {\n    setTab(newVal);\n  };\n\n  const validate = async () => {\n    let token = localStorage.getItem('authToken');\n    let url = 'http://psmcq.online/general/checkUser';\n\n    try {\n      await axios\n        .get(url, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          if (res.data.result.userType !== 'Owner') {\n            setRedirect(true);\n            return;\n          } else {\n            setLoading(false);\n          }\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    validate();\n  }, []);\n\n  useEffect(() => {\n    if (refresh === true) {\n    }\n  }, [refresh]);\n\n  if (redirect) {\n    return <Redirect to=\"/\" />;\n  } else if (loading) {\n    return <Loading />;\n  } else {\n    return (\n      <Container className=\"dashboard-page owner-page\">\n        <Typography variant=\"h4\" className=\"dash-head\">\n          Owner Dashboard\n        </Typography>\n        <div className=\"dash-section\">\n          <AppBar\n            position=\"static\"\n            color=\"default\"\n            className=\"bg-white tab-bar owner-tab\"\n          >\n            <Tabs\n              value={tab}\n              onChange={handleTabChange}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              variant=\"fullWidth\"\n              aria-label=\"full width tabs owner-dashboard\"\n            >\n              <Tab label=\"All Quizzes\" />\n              <Tab label=\"All User\" />\n              <Tab label=\"All Organizer\" />\n            </Tabs>\n          </AppBar>\n          <TabPanel value={tab} index={0}>\n            <OwnerQuizzes />\n          </TabPanel>\n          <TabPanel value={tab} index={1}>\n            <OwnerUsers />\n          </TabPanel>\n          <TabPanel value={tab} index={2}>\n            <OwnerOrganizers />\n          </TabPanel>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default OwnerDashboard;\n\nfunction TabPanel(props) {\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={props.value !== props.index}\n      id={`simple-tabpanel-${props.index}`}\n      aria-labelledby={`simple-tab-${props.index}`}\n    >\n      <div>{props.children}</div>\n    </div>\n  );\n}\n","/* Copy of EditQuiz.js */\nimport React, { useEffect, useState } from 'react';\nimport './EditQuiz.css';\nimport {\n  Container,\n  Typography,\n  Button,\n  Dialog,\n  Grid,\n  InputLabel,\n  Select,\n  MenuItem,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  FormControlLabel,\n  IconButton,\n  DialogTitle,\n  Snackbar,\n} from '@material-ui/core';\nimport { Create, ExpandMore, Adjust, Delete } from '@material-ui/icons';\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport Loading from './Loading';\nimport TextInput from '../components/TextInput';\nimport { Alert } from '@material-ui/lab';\n\nfunction OwnerQuizDetails(props) {\n  const quizId = props.match.params.id;\n\n  const [loading, setLoading] = useState(true);\n  const [redirect, setRedirect] = useState(false);\n  const [redirectD, setRedirectD] = useState(false);\n\n  const [quizDetails, setQuizDetails] = useState({});\n  const [quizQuestions, setQuizQuestions] = useState([]);\n  const [responses, setResponses] = useState([]);\n\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [deleteSnack, setDeleteSnack] = useState(false);\n\n  const handleDeleteBtn = () => {\n    setDeleteModal(true);\n  };\n\n  const validate = async () => {\n    let token = localStorage.getItem('authToken');\n    let url = 'http://psmcq.online/general/checkUser';\n\n    try {\n      await axios\n        .get(url, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          if (res.data.result.userType !== 'Owner') {\n            setRedirectD(true);\n            return;\n          }\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleDelete = async () => {\n    setDeleteSnack(true);\n    let token = localStorage.getItem('authToken');\n    let url = `http://psmcq.online/owner/quiz/${quizId}`;\n\n    try {\n      await axios\n        .delete(url, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          setRedirect(true);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getQuizDetails = async () => {\n    setLoading(true);\n    let token = localStorage.getItem('authToken');\n    let url = `http://psmcq.online/quiz/${quizId}`;\n\n    try {\n      await axios\n        .get(url, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          setQuizDetails(res.data.result);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n\n    url = `http://psmcq.online/question/all/${quizId}`;\n\n    try {\n      await axios\n        .get(url, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          setQuizQuestions(res.data.result);\n          setLoading(false);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n\n    // url = `http://psmcq.online/admin/allStudentsQuizResult/${quizId}`;\n\n    // try {\n    // \tawait axios.get(url, {\n    // \t\theaders: {\n    // \t\t\t\"auth-token\": token\n    // \t\t}\n    // \t}).then(res => {\n    // \t\tconsole.log(res);\n    // \t\tsetResponses(res.data.userResults);\n    // \t\tsetLoading(false);\n    // \t})\n    // } catch(error) {\n    // \tconsole.log(error);\n    // }\n  };\n\n  useEffect(() => {\n    let token = localStorage.getItem('authToken');\n    if (token === null) {\n      setLoading(false);\n      setRedirect(true);\n      return;\n    }\n    validate();\n    getQuizDetails();\n  }, []);\n\n  if (loading) {\n    return <Loading />;\n  } else if (redirect) {\n    return <Redirect to=\"/coronilOP\" />;\n  } else if (redirectD) {\n    return <Redirect to=\"/dashboard\" />;\n  } else {\n    return (\n      <Container className=\"edit-quiz-page\">\n        <Typography variant=\"h3\" className=\"dash-head p-top edit-quiz-head\">\n          Quiz Details\n        </Typography>\n        <div className=\"edit-btn-bar\">\n          <Button\n            className=\"edit-details-btn delete-btn\"\n            onClick={handleDeleteBtn}\n          >\n            <Delete className=\"edit-icon\" />\n            Delete Quiz\n          </Button>\n        </div>\n        <div className=\"quiz-details-sec\">\n          <Typography variant=\"h6\" className=\"quiz-detail-param\">\n            Name:{' '}\n            <span className=\"quiz-detail-text\">{quizDetails.quizName}</span>\n          </Typography>\n          <Typography variant=\"h6\" className=\"quiz-detail-param\">\n            Date:{' '}\n            <span className=\"quiz-detail-text\">\n              {new Date(Number(quizDetails.scheduledFor)).toDateString()}\n            </span>\n          </Typography>\n          <Typography variant=\"h6\" className=\"quiz-detail-param\">\n            Time:{' '}\n            <span className=\"quiz-detail-text\">\n              {new Date(Number(quizDetails.scheduledFor)).toLocaleTimeString()}\n            </span>\n          </Typography>\n          <Typography variant=\"h6\" className=\"quiz-detail-param\">\n            Duration:{' '}\n            <span className=\"quiz-detail-text\">\n              {quizDetails.quizDuration} minutes\n            </span>\n          </Typography>\n          <Typography variant=\"h6\" className=\"quiz-detail-param\">\n            Type:{' '}\n            <span className=\"quiz-detail-text\">{quizDetails.quizType}</span>\n          </Typography>\n          {quizDetails.quizType === 'private' ? (\n            <Typography variant=\"h6\" className=\"quiz-detail-param\">\n              Quiz Code:{' '}\n              <span className=\"quiz-detail-text\">{quizDetails.quizCode}</span>\n            </Typography>\n          ) : null}\n        </div>\n        <div className=\"quiz-questions-sec\">\n          <Typography variant=\"h4\" className=\"quiz-questions-head\">\n            Questions\n          </Typography>\n          <div className=\"quiz-questions-display\">\n            {quizQuestions.length === 0 ? (\n              <p style={{ textAlign: 'center' }}>No questions added yet!</p>\n            ) : (\n              <div className=\"questions-list-display\">\n                {quizQuestions.map((question) => (\n                  <ExpansionPanel\n                    elevation={3}\n                    className=\"expansion\"\n                    key={question._id}\n                  >\n                    <ExpansionPanelSummary\n                      className=\"question-summary\"\n                      expandIcon={<ExpandMore />}\n                      aria-controls=\"question-content\"\n                      aria-label=\"Expand\"\n                    >\n                      <Typography className=\"question-label\">\n                        {question.description}\n                      </Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                      <List component=\"nav\" className=\"options-display\">\n                        {question.options.map((option) => (\n                          <ListItem button key={option._id}>\n                            <ListItemIcon>\n                              <Adjust\n                                style={{\n                                  color:\n                                    question.correctAnswer === option.text\n                                      ? 'green'\n                                      : 'black',\n                                }}\n                              />\n                            </ListItemIcon>\n                            <ListItemText\n                              style={{\n                                color:\n                                  question.correctAnswer === option.text\n                                    ? 'green'\n                                    : 'black',\n                              }}\n                              primary={option.text}\n                            />\n                          </ListItem>\n                        ))}\n                      </List>\n                    </ExpansionPanelDetails>\n                  </ExpansionPanel>\n                ))}\n              </div>\n            )}\n          </div>\n          {/* <Typography variant=\"h4\" className=\"quiz-questions-head m-top\">Submissions</Typography>\n\t\t\t\t\t<div className=\"quiz-students-list\">\n\t\t\t\t\t\t{responses.length === 0? <p style={{ textAlign: 'center' }}>No responses yet!</p>\n\t\t\t\t\t\t: \n\t\t\t\t\t\t<List aria-label=\"responses list\">\n\t\t\t\t\t\t\t{responses.map((response) => (\n\t\t\t\t\t\t\t\t<ListItem button key={response._id}>\n\t\t\t\t\t\t\t\t\t<ListItemText primary={response.userId.name} secondary={`Scored: ${response.marks}`} />\n\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</List>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div> */}\n        </div>\n        <Dialog\n          open={deleteModal}\n          onClose={() => setDeleteModal(false)}\n          aria-labelledby=\"delete-quiz-modal\"\n          PaperProps={{\n            style: {\n              backgroundColor: 'white',\n              color: 'black',\n              minWidth: '10%',\n            },\n          }}\n        >\n          <DialogTitle>Are you sure you want to delete this quiz?</DialogTitle>\n          <div className=\"btn-div\">\n            <Button\n              className=\"logout-btn m-right bg-red-btn\"\n              onClick={handleDelete}\n            >\n              Yes\n            </Button>\n            <Button\n              className=\"cancel-btn m-left\"\n              onClick={() => setDeleteModal(false)}\n            >\n              No\n            </Button>\n          </div>\n        </Dialog>\n        <Snackbar\n          open={deleteSnack}\n          autoHideDuration={5000}\n          onClose={() => setDeleteSnack(false)}\n        >\n          <Alert\n            variant=\"filled\"\n            severity=\"info\"\n            onClose={() => setDeleteSnack(false)}\n          >\n            Processing... Please Wait!\n          </Alert>\n        </Snackbar>\n      </Container>\n    );\n  }\n}\n\nexport default OwnerQuizDetails;\n","import React, { useState } from 'react';\nimport './ResultPage.css';\nimport {\n  Container,\n  Typography,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails,\n  List,\n  ListItemIcon,\n  ListItemText,\n  ListItem,\n} from '@material-ui/core';\nimport axios from 'axios';\nimport Loading from './Loading';\nimport { Adjust, ExpandMore, Check, Close, Warning } from '@material-ui/icons';\n\nfunction ResultPage(props) {\n  const [quizId, setQuizId] = useState(props.match.params.id);\n  const [loading, setLoading] = useState(true);\n\n  const [name, setName] = useState('');\n  const [marks, setMarks] = useState(null);\n  const [responses, setResponses] = useState([]);\n\n  const resIcon = (response) => {\n    if (response.selected === response.correctAnswer) {\n      return <Check style={{ color: 'green', marginLeft: '3px' }} />;\n    } else if (response.selected === null) {\n      return <Warning style={{ color: 'goldenrod', marginLeft: '3px' }} />;\n    } else {\n      return <Close style={{ color: 'red', marginLeft: '3px' }} />;\n    }\n  };\n\n  const getDetails = async () => {\n    let token = localStorage.getItem('authToken');\n    let url = `http://psmcq.online/quiz/${quizId}`;\n\n    try {\n      await axios\n        .get(url, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          setName(res.data.result.quizName);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getResponses = async () => {\n    let token = localStorage.getItem('authToken');\n    let url = `http://psmcq.online/user/studentQuizResult/${quizId}`;\n\n    try {\n      await axios\n        .get(url, {\n          headers: {\n            'auth-token': token,\n          },\n        })\n        .then((res) => {\n          setMarks(res.data.result.marks);\n          setResponses(res.data.result.responses);\n          setLoading(false);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useState(() => {\n    getDetails();\n    getResponses();\n  }, []);\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  return (\n    <Container className=\"result-page\">\n      <div className=\"result-head\">\n        <Typography variant=\"h4\" className=\"result-title\">\n          Results\n        </Typography>\n      </div>\n      <div className=\"result-quiz-info\">\n        <Typography variant=\"h5\">\n          <span className=\"profile-param\">Quiz:</span> <strong>{name}</strong>\n        </Typography>\n        <Typography variant=\"h5\">\n          <span className=\"profile-param\">Scored:</span>{' '}\n          <strong>{marks}</strong> out of <strong>{responses.length}</strong>\n        </Typography>\n      </div>\n      <div className=\"result-responses\">\n        <div className=\"result-response-title\">\n          <Typography variant=\"h5\">Responses</Typography>\n        </div>\n        <div className=\"result-responses-list\">\n          {responses.map((response) => (\n            <ExpansionPanel\n              elevation={3}\n              className=\"expansion\"\n              key={response.quesId}\n            >\n              <ExpansionPanelSummary\n                className=\"question-response\"\n                expandIcon={<ExpandMore />}\n                aria-controls=\"question-content\"\n                aria-label=\"Expand\"\n              >\n                <Typography className=\"question-label\">\n                  {response.description} {resIcon(response)}\n                </Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails>\n                <List component=\"nav\" className=\"options-display\">\n                  {response.options.map((option) => (\n                    <ListItem button key={option._id}>\n                      <ListItemIcon>\n                        <Adjust\n                          style={{\n                            color:\n                              response.correctAnswer === option.text\n                                ? 'green'\n                                : response.selected === option.text\n                                ? 'red'\n                                : 'black',\n                          }}\n                        />\n                      </ListItemIcon>\n                      <ListItemText\n                        style={{\n                          color:\n                            response.correctAnswer === option.text\n                              ? 'green'\n                              : response.selected === option.text\n                              ? 'red'\n                              : 'black',\n                        }}\n                        primary={option.text}\n                      />\n                    </ListItem>\n                  ))}\n                </List>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          ))}\n        </div>\n      </div>\n    </Container>\n  );\n}\n\nexport default ResultPage;\n","/* Copy of Results.js */\nimport React, { useState } from \"react\";\nimport \"./ResultPage.css\";\nimport { Container, Typography, ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, List, ListItemIcon, ListItemText, ListItem, IconButton } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport Loading from \"./Loading\";\nimport { Adjust, ExpandMore, Check, Close, Warning, ArrowBackIos, ArrowBack } from \"@material-ui/icons\";\nimport { Redirect } from \"react-router\";\n\nfunction StudentResponses(props) {\n\tconst [loading, setLoading] = useState(true);\n\n\tconst [name, setName] = useState(\"\");\n\tconst [marks, setMarks] = useState(null);\n\tconst [responses, setResponses] = useState([]);\n\t\n\tconst [redirect, setRedirect] = useState(false);\n\n\tlet state = null;\n\n\tconst resIcon = (response) => {\n\t\tif(response.selected === response.correctAnswer) {\n\t\t\treturn <Check style={{color: 'green', marginLeft: '3px'}} />\n\t\t} else if(response.selected === null) {\n\t\t\treturn <Warning style={{color: 'goldenrod', marginLeft: '3px'}} />\n\t\t} \n\t\telse {\n\t\t\treturn <Close style={{color: 'red', marginLeft: '3px'}} />\n\t\t}\n\t}\n\n\tconst setup = () => {\n\t\tsetName(state.userId.name);\n\t\tsetMarks(state.marks);\n\t\tsetResponses(state.responses);\n\t\tsetLoading(false);\n\t}\n\n\t\n\tuseState(() => {\n\t\tif(props.location.state === undefined) {\n\t\t\tsetLoading(false);\n\t\t\tsetRedirect(true);\n\t\t\treturn;\n\t\t}\n\n\t\tstate = props.location.state.response;\n\t\tsetup();\n\t}, [])\n\n\tif (loading) {\n\t\treturn <Loading />\n\t} else if(redirect) {\n\t\treturn <Redirect to=\"/dashboard\" />\n\t}\n\n\treturn (\n\t\t<Container className=\"result-page\">\n\t\t\t<div className=\"result-head\">\n\t\t\t\t<Typography variant=\"h4\" className=\"result-title\">Results</Typography>\n\t\t\t</div>\n\t\t\t<div className=\"result-quiz-info\">\n\t\t\t\t<Typography variant=\"h5\"><span className=\"profile-param\">Quiz:</span> <strong>{name}</strong></Typography>\n\t\t\t\t<Typography variant=\"h5\"><span className=\"profile-param\">Scored:</span> <strong>{marks}</strong> out of <strong>{responses.length}</strong></Typography>\n\t\t\t</div>\n\t\t\t<div className=\"result-responses\">\n\t\t\t\t<div className=\"result-response-title\">\n\t\t\t\t\t<Typography variant=\"h5\">Responses</Typography>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"result-responses-list\">\n\t\t\t\t\t{responses.map((response) => (\n\t\t\t\t\t\t<ExpansionPanel elevation={3} className=\"expansion\" key={response.quesId}>\n\t\t\t\t\t\t\t<ExpansionPanelSummary\n\t\t\t\t\t\t\t\tclassName=\"question-response\"\n\t\t\t\t\t\t\t\texpandIcon={<ExpandMore />}\n\t\t\t\t\t\t\t\taria-controls=\"question-content\"\n\t\t\t\t\t\t\t\taria-label=\"Expand\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Typography className=\"question-label\">{response.description} {resIcon(response)}</Typography>\n\t\t\t\t\t\t\t</ExpansionPanelSummary>\n\t\t\t\t\t\t\t<ExpansionPanelDetails>\n\t\t\t\t\t\t\t\t<List component=\"nav\" className=\"options-display\">\n\t\t\t\t\t\t\t\t\t{response.options.map((option) => (\n\t\t\t\t\t\t\t\t\t\t<ListItem button key={option._id}>\n\t\t\t\t\t\t\t\t\t\t\t<ListItemIcon><Adjust style={{ color: response.correctAnswer === option.text ? 'green' : (response.selected === option.text? 'red': 'black') }} /></ListItemIcon>\n\t\t\t\t\t\t\t\t\t\t\t<ListItemText style={{ color: response.correctAnswer === option.text ? 'green' : (response.selected === option.text? 'red': 'black') }} primary={option.text} />\n\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t</ExpansionPanelDetails>\n\t\t\t\t\t\t</ExpansionPanel>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Container>\n\t)\n}\n\nexport default StudentResponses;","import React, { useState, useEffect } from 'react';\nimport { Container, Button, Typography } from '@material-ui/core';\nimport TextInput from '../components/TextInput';\nimport './ForgotPassword.css';\nimport axios from 'axios';\nimport Loading from './Loading';\nimport { Alert } from '@material-ui/lab';\nimport { Redirect } from 'react-router';\nimport { useGoogleReCaptcha } from 'react-google-recaptcha-v3';\n\nfunction VerifyMail(props) {\n  const [userType] = useState(props.match.params.type);\n  const [email, setEmail] = useState('');\n\n  const [code, setCode] = useState('');\n  const [codeError, setCodeError] = useState('');\n  const [codeChanged, setCodeChanged] = useState(false);\n\n  const [loading, setLoading] = useState(false);\n  const [redirect, setRedirect] = useState(false);\n  const [redirectMain, setRedirectMain] = useState(false);\n\n  const [error, setError] = useState(false);\n  const { executeRecaptcha } = useGoogleReCaptcha();\n\n  const handleCodeChange = (event) => {\n    setCode(event.target.value);\n  };\n\n  const sendCode = async () => {\n    let url = null;\n    if (userType === 'organizer') {\n      url = `http://psmcq.online/admin/resendverificationemail`;\n    } else {\n      url = `http://psmcq.online/user/resendverificationemail`;\n    }\n\n    let data = {\n      email: props.location.state.email,\n    };\n\n    try {\n      await axios.post(url, data).then((res) => {\n        console.log('Email successfully sent');\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSubmit = async () => {\n    setCodeChanged(true);\n\n    let errors = false;\n\n    if (code.length === 0) {\n      setCodeError('Enter the verification code');\n      errors = true;\n    }\n\n    if (!errors && codeError.length === 0) {\n      setLoading(true);\n      let url = null;\n      if (userType === 'organizer') {\n        url = `http://psmcq.online/admin/verifyEmail`;\n      } else if (userType === 'user') {\n        url = `http://psmcq.online/user/verifyEmail`;\n      }\n\n      let captcha = await executeRecaptcha('email_verify');\n\n      let data = {\n        verificationKey: code,\n        captcha: captcha,\n      };\n\n      try {\n        await axios.patch(url, data).then((res) => {\n          setLoading(false);\n          setRedirect(true);\n        });\n      } catch (error) {\n        setLoading(false);\n        if (error.response.status === 500) {\n          setCodeError(true);\n        }\n        console.log(error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (code.length === 0) setCodeError('This cannot be empty!');\n    else setCodeError('');\n  }, [code]);\n\n  useEffect(() => {\n    if (\n      props.match.params.type !== 'user' &&\n      props.match.params.type !== 'organizer'\n    ) {\n      setRedirectMain(true);\n      return;\n    }\n\n    if (props.location.state === undefined) {\n      setRedirectMain(true);\n      return;\n    } else {\n      setEmail(props.location.state.email);\n      if (props.location.state.sendCode) {\n        sendCode();\n      }\n    }\n  }, []);\n\n  if (loading) return <Loading />;\n  else if (redirect) return <Redirect to={`/login/${userType}`} />;\n  else if (redirectMain) return <Redirect to=\"/\" />;\n  else {\n    return (\n      <Container className=\"login-page\">\n        <div className=\"login-form\">\n          <Typography\n            variant=\"h3\"\n            color=\"primary\"\n            className=\"login-head forgot-head\"\n          >\n            Verify E-mail\n          </Typography>\n          <br />\n          {!error ? (\n            <Alert severity=\"info\" color=\"info\">\n              A verification email was sent to {email}\n            </Alert>\n          ) : null}\n          {error ? (\n            <Alert severity=\"error\" color=\"error\">\n              Verification mail could not be sent. Please try again...\n            </Alert>\n          ) : null}\n          <form className=\"form\">\n            <TextInput\n              error={\n                codeChanged ? (codeError.length === 0 ? false : true) : false\n              }\n              helperText={\n                codeChanged ? (codeError.length === 0 ? null : codeError) : null\n              }\n              id=\"verification-code\"\n              label=\"Verification Code\"\n              type=\"text\"\n              className=\"form-input\"\n              variant=\"outlined\"\n              value={code}\n              onChange={handleCodeChange}\n            />\n          </form>\n          <Button className=\"login-btn\" onClick={handleSubmit}>\n            Verify\n          </Button>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default VerifyMail;\n","/* Copy of Results.js */\nimport React, { useState } from \"react\";\nimport \"./ResultPage.css\";\nimport { Container, Typography, Grid } from \"@material-ui/core\";\nimport Loading from \"./Loading\";\nimport { Redirect } from \"react-router\";\nimport {Pie, Bar, Line} from \"react-chartjs-2\";\n\nfunction QuizStats(props) {\n\tconst [loading, setLoading] = useState(true);\n\n\tlet state = null;\n\tconst [marksPieData, setMarksPieData] = useState({labels: [], data: [], colors: []});\n\tconst [highLowGraph, setHighLowData] = useState({highest: -1, lowest: -1, average: -1});\n\tconst [lineGraphData, setLineData] = useState({labels: [], data: []});\n\t\n\tconst [redirect, setRedirect] = useState(false);\n\n\tconst randomColor = () => {\n\t\tlet r = Math.floor(Math.random() * 255);\n\t\tlet g = Math.floor(Math.random() * 255);\n\t\tlet b = Math.floor(Math.random() * 255);\n\t\treturn \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n\t}\n\n\tconst setup = () => {\n\t\tlet obj = {};\n\t\tlet obj2 = {labels: [], data: []};\n\n\t\tlet highest = -1;\n\t\tlet lowest = Infinity;\n\t\tlet sum = 0;\n\n\t\tstate.map((response) => {\n\t\t\thighest = Math.max(highest, response.marks);\n\t\t\tlowest = Math.min(lowest, response.marks);\n\t\t\tsum += response.marks;\n\t\t\tif(obj[response.marks] === undefined) {\n\t\t\t\tobj[response.marks] = 1;\n\t\t\t} else {\n\t\t\t\tobj[response.marks]++;\n\t\t\t}\n\t\t\t\n\t\t\tlet time = (response.timeEnded-response.timeStarted)/(1000*60);\n\n\t\t\tobj2[\"labels\"].push(response.userId.name);\n\t\t\tobj2[\"data\"].push(time);\n\t\t})\n\n\t\tObject.keys(obj).map((mark) => {\n\t\t\tlet newData = marksPieData;\n\t\t\tnewData[\"labels\"].push(mark);\n\t\t\tnewData[\"data\"].push(obj[mark]);\n\t\t\tnewData[\"colors\"].push(randomColor());\n\t\t\tsetMarksPieData(newData);\n\t\t})\n\n\t\tlet average = sum/state.length;\n\t\tlet newBarData = highLowGraph;\n\t\tnewBarData[\"highest\"] = highest;\n\t\tnewBarData[\"average\"] = average;\n\t\tnewBarData[\"lowest\"] = lowest;\n\t\tsetHighLowData(newBarData);\n\t\tsetLineData(obj2);\n\n\t\tsetLoading(false);\n\t}\n\t\n\tuseState(() => {\n\t\tif(props.location.state === undefined) {\n\t\t\tsetLoading(false);\n\t\t\tsetRedirect(true);\n\t\t\treturn;\n\t\t}\n\n\t\tstate = props.location.state.responses;\n\t\tconsole.log(state);\n\t\tsetup();\n\t}, [])\n\n\tif (loading) {\n\t\treturn <Loading />\n\t} else if(redirect) {\n\t\treturn <Redirect to=\"/dashboard\" />\n\t}\n\treturn (\n\t\t<Container className=\"result-page\">\n\t\t\t<div className=\"result-head\">\n\t\t\t\t<Typography variant=\"h4\" className=\"result-title\">Stats</Typography>\n\t\t\t</div>\n\t\t\t<div className=\"charts-container\" style={{paddingBottom: '3%'}}>\n\t\t\t\t<div className=\"pie-chart\" style={{marginBottom: '3%'}}>\n\t\t\t\t\t<Pie data={{\n\t\t\t\t\t\tdatasets: [{data: marksPieData[\"data\"], backgroundColor: marksPieData[\"colors\"]}], \n\t\t\t\t\t\tlabels: marksPieData[\"labels\"]\n\t\t\t\t\t}} \n\t\t\t\t\twidth={300} height={300} \n\t\t\t\t\toptions={{\n\t\t\t\t\t\tmaintainAspectRatio: false, \n\t\t\t\t\t\tresponsive: true, \n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\t\ttext: \"Marks Obtained\",\n\t\t\t\t\t\t\tfontSize: 16\n\t\t\t\t\t\t}}}/>\n\t\t\t\t</div>\n\t\t\t\t<Grid container spacing={0}>\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<Bar width={300} height={300}\n\t\t\t\t\t\t\tdata={{\n\t\t\t\t\t\t\t\tdatasets: [{\n\t\t\t\t\t\t\t\t\tdata: [highLowGraph[\"highest\"], highLowGraph[\"average\"], highLowGraph[\"lowest\"]],\n\t\t\t\t\t\t\t\t\tbackgroundColor: [\"green\", \"yellow\", \"red\"],\n\t\t\t\t\t\t\t\t\tbarThickness: 70\n\t\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\t\tlabels: [\"Highest\", \"Average\", \"Lowest\"]\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\t\tlegend: {display: false},\n\t\t\t\t\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\t\t\t\ttext: \"Highest/Average/Lowest\",\n\t\t\t\t\t\t\t\t\tfontSize: 16\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tscales: { yAxes: [{ticks: {beginAtZero: true}}]}\n\t\t\t\t\t\t\t}} />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<Line width={300} height={300}\n\t\t\t\t\t\t\tdata={{\n\t\t\t\t\t\t\t\tdatasets: [{\n\t\t\t\t\t\t\t\t\tdata: lineGraphData[\"data\"],\n\t\t\t\t\t\t\t\t\tbackgroundColor: \"rgba(255, 0, 255, 0.3)\",\n\t\t\t\t\t\t\t\t\tborderColor: \"rgb(255, 0, 255)\"\n\t\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\t\tlabels: lineGraphData[\"labels\"]\n\t\t\t\t\t\t\t}}\n\n\t\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\t\t\t\ttext: \"Time taken (in minutes)\",\n\t\t\t\t\t\t\t\t\tfontSize: 16\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tlegend: {display: false}\n\t\t\t\t\t\t\t}} />\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t</Container>\n\t)\n}\n\nexport default QuizStats;","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Welcome from \"./pages/Welcome\";\nimport LoginPage from \"./pages/LoginPage\";\nimport RegisterPage from \"./pages/RegisterPage\";\nimport Quiz from \"./pages/Quiz\";\nimport ErrorPage from \"./pages/ErrorPage\";\nimport InfoContext from \"./context/InfoContext\";\nimport ForgotPassword from \"./pages/ForgotPassword\";\nimport Dashboard from \"./pages/Dashboard\";\nimport CreateQuiz from \"./pages/CreateQuiz\";\nimport EditQuiz from \"./pages/EditQuiz\";\nimport UpdateQuizDetails from \"./pages/updateQuizDetails\";\nimport UpdateProfile from \"./pages/UpdateProfile\";\nimport UpdatePassword from \"./pages/UpdatePassword\";\nimport OwnerDashboard from \"./pages/OwnerDashboard\";\nimport OwnerQuizDetails from \"./pages/OwnerQuizDetails\";\nimport ResultPage from \"./pages/ResultPage\";\nimport StudentResponses from \"./pages/StudentResponses\";\nimport VerifyMail from \"./pages/VerifyMail\";\nimport QuizStats from \"./pages/QuizStats\";\n\nfunction App() {\n\tconst [authToken, setAuthToken] = useState(null);\n\tconst [isLoggedIn, setLoggedIn] = useState(false);\n\tconst [name, changeName] = useState(null);\n\tconst [isAdmin, setAdmin] = useState(false);\n\n\tlet info = {\n\t\tname: name,\n\t\tchangeName: changeName,\n\t\tauthToken: authToken,\n\t\tsetAuthToken: setAuthToken,\n\t\tisLoggedIn: isLoggedIn,\n\t\tsetLoggedIn: setLoggedIn,\n\t\tisAdmin: isAdmin,\n\t\tsetAdmin: setAdmin,\n\t};\n\n\treturn (\n\t\t<InfoContext.Provider value={info}>\n\t\t\t<Router>\n\t\t\t\t<Navbar loggedIn={info.isLoggedIn} />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={Welcome} />\n\t\t\t\t\t<Route exact path=\"/dashboard\" component={Dashboard} />\n\t\t\t\t\t<Route exact path=\"/coronilOP\" component={OwnerDashboard} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/ownerQuizDetails/:id\"\n\t\t\t\t\t\tcomponent={OwnerQuizDetails}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route exact path=\"/results/:id\" component={ResultPage} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/updateProfile/:type\"\n\t\t\t\t\t\tcomponent={UpdateProfile}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/updatePassword/:type\"\n\t\t\t\t\t\tcomponent={UpdatePassword}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route exact path=\"/createQuiz\">\n\t\t\t\t\t\t<CreateQuiz />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route exact path=\"/editQuiz/:id\" component={EditQuiz} />\n\t\t\t\t\t<Route exact path=\"/quizStats\" component={QuizStats} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/studentResponse\"\n\t\t\t\t\t\tcomponent={StudentResponses}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/updateQuizDetails/:id\"\n\t\t\t\t\t\tcomponent={UpdateQuizDetails}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/register/:type\"\n\t\t\t\t\t\tcomponent={RegisterPage}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route exact path=\"/verify/:type\" component={VerifyMail} />\n\t\t\t\t\t<Route exact path=\"/quiz/\" component={Quiz} />\n\t\t\t\t\t<Route exact path=\"/login/:type\" component={LoginPage} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/forgotPassword/:type\"\n\t\t\t\t\t\tcomponent={ForgotPassword}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route path=\"*\">\n\t\t\t\t\t\t<ErrorPage />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</InfoContext.Provider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { GoogleReCaptchaProvider } from 'react-google-recaptcha-v3';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GoogleReCaptchaProvider reCaptchaKey={process.env.REACT_APP_RECAPTCHA_KEY}>\n      <App />\n    </GoogleReCaptchaProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}